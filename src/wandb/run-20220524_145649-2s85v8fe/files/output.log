Downloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.pubmed.x
Downloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.pubmed.tx
Downloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.pubmed.allx
Downloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.pubmed.y
Downloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.pubmed.ty
Downloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.pubmed.ally
Downloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.pubmed.graph
Downloading https://github.com/kimiyoung/planetoid/raw/master/data/ind.pubmed.test.index
Processing...
Done!
****************** Adaptive GRAND transformer function ******************
****************** Adaptive GRAND transformer function ******************
GNNEarly
m1.module.weight
torch.Size([128, 500])
m1.module.bias
torch.Size([128])
m2.module.weight
torch.Size([3, 128])
m2.module.bias
torch.Size([3])
odeblock.odefunc.alpha_train
torch.Size([])
odeblock.odefunc.beta_train
torch.Size([])
odeblock.odefunc.alpha_sc
torch.Size([1])
odeblock.odefunc.beta_sc
torch.Size([1])
odeblock.odefunc.k_d
torch.Size([128])
odeblock.odefunc.multihead_att_layer.Q.weight
torch.Size([16, 128])
odeblock.odefunc.multihead_att_layer.Q.bias
torch.Size([16])
odeblock.odefunc.multihead_att_layer.V.weight
torch.Size([16, 128])
odeblock.odefunc.multihead_att_layer.V.bias
torch.Size([16])
odeblock.odefunc.multihead_att_layer.K.weight
torch.Size([16, 128])
odeblock.odefunc.multihead_att_layer.K.bias
torch.Size([16])
odeblock.odefunc.multihead_att_layer.Wout.weight
torch.Size([128, 16])
odeblock.odefunc.multihead_att_layer.Wout.bias
torch.Size([128])
odeblock.reg_odefunc.odefunc.alpha_train
torch.Size([])
odeblock.reg_odefunc.odefunc.beta_train
torch.Size([])
odeblock.reg_odefunc.odefunc.alpha_sc
torch.Size([1])
odeblock.reg_odefunc.odefunc.beta_sc
torch.Size([1])
odeblock.reg_odefunc.odefunc.k_d
torch.Size([128])
odeblock.reg_odefunc.odefunc.multihead_att_layer.Q.weight
torch.Size([16, 128])
odeblock.reg_odefunc.odefunc.multihead_att_layer.Q.bias
torch.Size([16])
odeblock.reg_odefunc.odefunc.multihead_att_layer.V.weight
torch.Size([16, 128])
odeblock.reg_odefunc.odefunc.multihead_att_layer.V.bias
torch.Size([16])
odeblock.reg_odefunc.odefunc.multihead_att_layer.K.weight
torch.Size([16, 128])
odeblock.reg_odefunc.odefunc.multihead_att_layer.K.bias
torch.Size([16])
odeblock.reg_odefunc.odefunc.multihead_att_layer.Wout.weight
torch.Size([128, 16])
odeblock.reg_odefunc.odefunc.multihead_att_layer.Wout.bias
torch.Size([128])
/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torchdiffeq/_impl/misc.py:11: UserWarning: Dopri5Solver: Unexpected arguments {'step_size': 1, 'max_iters': 100}
  warnings.warn('{}: Unexpected arguments {}'.format(solver.__class__.__name__, unused_kwargs))
K_d =  Parameter containing:
tensor([0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853, 0.9853,
        0.9853, 0.9853], device='cuda:0', requires_grad=True)
Epoch: 001/100, Runtime 1.809220, Loss 1.099747, forward nfe 14, backward nfe 6, Train: 0.6500, Val: 0.5389, Test: 0.5217, Best time: 1.0000
/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torchdiffeq/_impl/misc.py:11: UserWarning: AdaptiveHeunSolver: Unexpected arguments {'step_size': 1, 'max_iters': 100}
  warnings.warn('{}: Unexpected arguments {}'.format(solver.__class__.__name__, unused_kwargs))
/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torchdiffeq/_impl/misc.py:11: UserWarning: EarlyStopDopri5: Unexpected arguments {'step_size': 1, 'max_iters': 100}
  warnings.warn('{}: Unexpected arguments {}'.format(solver.__class__.__name__, unused_kwargs))
K_d =  Parameter containing:
tensor([0.9707, 0.9707, 0.9707, 0.9707, 0.9707, 0.9707, 0.9708, 0.9708, 0.9707,
        0.9707, 0.9707, 0.9707, 0.9707, 0.9707, 0.9707, 0.9707, 0.9707, 0.9708,
        0.9708, 0.9708, 0.9707, 0.9707, 0.9708, 0.9708, 0.9708, 0.9707, 0.9707,
        0.9708, 0.9707, 0.9707, 0.9707, 0.9708, 0.9707, 0.9707, 0.9708, 0.9707,
        0.9707, 0.9708, 0.9708, 0.9708, 0.9708, 0.9707, 0.9708, 0.9708, 0.9707,
        0.9707, 0.9708, 0.9707, 0.9707, 0.9707, 0.9707, 0.9707, 0.9708, 0.9707,
        0.9707, 0.9707, 0.9708, 0.9707, 0.9708, 0.9707, 0.9707, 0.9708, 0.9707,
        0.9709, 0.9707, 0.9707, 0.9707, 0.9707, 0.9710, 0.9707, 0.9708, 0.9707,
        0.9707, 0.9707, 0.9708, 0.9708, 0.9708, 0.9708, 0.9707, 0.9707, 0.9708,
        0.9707, 0.9707, 0.9708, 0.9707, 0.9708, 0.9707, 0.9707, 0.9708, 0.9707,
        0.9708, 0.9708, 0.9709, 0.9707, 0.9708, 0.9707, 0.9707, 0.9707, 0.9707,
        0.9707, 0.9707, 0.9708, 0.9707, 0.9707, 0.9708, 0.9708, 0.9707, 0.9708,
        0.9708, 0.9707, 0.9708, 0.9707, 0.9707, 0.9708, 0.9707, 0.9707, 0.9707,
        0.9707, 0.9707, 0.9708, 0.9707, 0.9707, 0.9707, 0.9708, 0.9707, 0.9708,
        0.9709, 0.9708], device='cuda:0', requires_grad=True)
Epoch: 002/100, Runtime 1.545439, Loss 1.080046, forward nfe 48, backward nfe 11, Train: 0.8667, Val: 0.7208, Test: 0.7069, Best time: 5.9901
K_d =  Parameter containing:
tensor([0.9560, 0.9561, 0.9561, 0.9561, 0.9560, 0.9562, 0.9563, 0.9562, 0.9561,
        0.9563, 0.9560, 0.9562, 0.9561, 0.9564, 0.9561, 0.9561, 0.9561, 0.9563,
        0.9563, 0.9563, 0.9562, 0.9560, 0.9563, 0.9564, 0.9563, 0.9561, 0.9562,
        0.9564, 0.9561, 0.9562, 0.9561, 0.9563, 0.9560, 0.9562, 0.9563, 0.9561,
        0.9562, 0.9563, 0.9563, 0.9563, 0.9563, 0.9562, 0.9563, 0.9563, 0.9562,
        0.9561, 0.9563, 0.9562, 0.9561, 0.9561, 0.9561, 0.9562, 0.9563, 0.9562,
        0.9561, 0.9561, 0.9564, 0.9561, 0.9563, 0.9563, 0.9561, 0.9563, 0.9562,
        0.9565, 0.9560, 0.9565, 0.9563, 0.9561, 0.9567, 0.9562, 0.9563, 0.9562,
        0.9562, 0.9562, 0.9563, 0.9563, 0.9563, 0.9563, 0.9563, 0.9561, 0.9563,
        0.9562, 0.9562, 0.9567, 0.9562, 0.9563, 0.9561, 0.9561, 0.9564, 0.9563,
        0.9562, 0.9563, 0.9565, 0.9561, 0.9562, 0.9562, 0.9562, 0.9560, 0.9560,
        0.9560, 0.9561, 0.9562, 0.9562, 0.9562, 0.9563, 0.9564, 0.9562, 0.9562,
        0.9563, 0.9561, 0.9563, 0.9562, 0.9561, 0.9563, 0.9560, 0.9561, 0.9563,
        0.9563, 0.9561, 0.9562, 0.9562, 0.9562, 0.9561, 0.9563, 0.9564, 0.9563,
        0.9570, 0.9563], device='cuda:0', requires_grad=True)
Epoch: 003/100, Runtime 1.593398, Loss 1.056478, forward nfe 82, backward nfe 17, Train: 0.8667, Val: 0.7208, Test: 0.7069, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.9415, 0.9415, 0.9415, 0.9415, 0.9413, 0.9418, 0.9419, 0.9417, 0.9415,
        0.9417, 0.9417, 0.9418, 0.9417, 0.9423, 0.9415, 0.9415, 0.9416, 0.9419,
        0.9420, 0.9419, 0.9416, 0.9415, 0.9418, 0.9420, 0.9419, 0.9416, 0.9419,
        0.9420, 0.9415, 0.9417, 0.9415, 0.9419, 0.9414, 0.9416, 0.9420, 0.9417,
        0.9417, 0.9417, 0.9419, 0.9419, 0.9419, 0.9418, 0.9419, 0.9419, 0.9417,
        0.9415, 0.9419, 0.9416, 0.9416, 0.9414, 0.9415, 0.9418, 0.9418, 0.9416,
        0.9415, 0.9415, 0.9420, 0.9416, 0.9419, 0.9419, 0.9416, 0.9419, 0.9417,
        0.9422, 0.9414, 0.9428, 0.9419, 0.9415, 0.9426, 0.9417, 0.9419, 0.9418,
        0.9417, 0.9421, 0.9419, 0.9419, 0.9420, 0.9420, 0.9419, 0.9416, 0.9420,
        0.9417, 0.9417, 0.9428, 0.9416, 0.9425, 0.9415, 0.9416, 0.9420, 0.9424,
        0.9417, 0.9419, 0.9422, 0.9416, 0.9417, 0.9418, 0.9416, 0.9415, 0.9414,
        0.9417, 0.9418, 0.9417, 0.9418, 0.9418, 0.9419, 0.9419, 0.9416, 0.9418,
        0.9419, 0.9416, 0.9420, 0.9418, 0.9416, 0.9420, 0.9416, 0.9416, 0.9419,
        0.9419, 0.9416, 0.9416, 0.9417, 0.9418, 0.9417, 0.9419, 0.9422, 0.9419,
        0.9428, 0.9419], device='cuda:0', requires_grad=True)
Epoch: 004/100, Runtime 1.632954, Loss 1.027979, forward nfe 116, backward nfe 23, Train: 0.8667, Val: 0.7208, Test: 0.7069, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.9269, 0.9270, 0.9269, 0.9269, 0.9266, 0.9275, 0.9276, 0.9272, 0.9269,
        0.9273, 0.9273, 0.9276, 0.9273, 0.9281, 0.9268, 0.9271, 0.9271, 0.9277,
        0.9276, 0.9277, 0.9274, 0.9270, 0.9274, 0.9278, 0.9273, 0.9271, 0.9275,
        0.9278, 0.9268, 0.9272, 0.9269, 0.9277, 0.9269, 0.9271, 0.9277, 0.9272,
        0.9273, 0.9272, 0.9277, 0.9277, 0.9277, 0.9275, 0.9275, 0.9277, 0.9276,
        0.9270, 0.9276, 0.9270, 0.9270, 0.9268, 0.9269, 0.9273, 0.9273, 0.9269,
        0.9269, 0.9268, 0.9275, 0.9272, 0.9276, 0.9276, 0.9272, 0.9275, 0.9271,
        0.9279, 0.9268, 0.9289, 0.9276, 0.9270, 0.9283, 0.9272, 0.9277, 0.9275,
        0.9272, 0.9279, 0.9277, 0.9275, 0.9277, 0.9277, 0.9276, 0.9271, 0.9277,
        0.9272, 0.9273, 0.9289, 0.9272, 0.9285, 0.9270, 0.9272, 0.9278, 0.9282,
        0.9271, 0.9277, 0.9277, 0.9272, 0.9271, 0.9275, 0.9272, 0.9270, 0.9268,
        0.9275, 0.9274, 0.9272, 0.9274, 0.9274, 0.9275, 0.9277, 0.9271, 0.9274,
        0.9277, 0.9272, 0.9276, 0.9273, 0.9270, 0.9276, 0.9273, 0.9272, 0.9276,
        0.9276, 0.9270, 0.9271, 0.9274, 0.9275, 0.9273, 0.9277, 0.9279, 0.9277,
        0.9286, 0.9277], device='cuda:0', requires_grad=True)
Epoch: 005/100, Runtime 1.545644, Loss 0.998848, forward nfe 150, backward nfe 29, Train: 0.9333, Val: 0.7326, Test: 0.7215, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.9124, 0.9126, 0.9125, 0.9123, 0.9121, 0.9133, 0.9133, 0.9129, 0.9124,
        0.9132, 0.9129, 0.9134, 0.9130, 0.9143, 0.9125, 0.9128, 0.9130, 0.9135,
        0.9134, 0.9136, 0.9133, 0.9128, 0.9129, 0.9137, 0.9128, 0.9127, 0.9134,
        0.9136, 0.9126, 0.9127, 0.9123, 0.9135, 0.9124, 0.9127, 0.9136, 0.9131,
        0.9129, 0.9130, 0.9135, 0.9135, 0.9135, 0.9134, 0.9131, 0.9135, 0.9136,
        0.9124, 0.9134, 0.9126, 0.9126, 0.9123, 0.9124, 0.9130, 0.9129, 0.9123,
        0.9123, 0.9125, 0.9130, 0.9129, 0.9134, 0.9134, 0.9127, 0.9130, 0.9126,
        0.9142, 0.9126, 0.9156, 0.9134, 0.9126, 0.9151, 0.9129, 0.9135, 0.9132,
        0.9128, 0.9145, 0.9135, 0.9130, 0.9136, 0.9136, 0.9134, 0.9128, 0.9136,
        0.9128, 0.9130, 0.9151, 0.9132, 0.9145, 0.9125, 0.9129, 0.9140, 0.9140,
        0.9126, 0.9135, 0.9137, 0.9128, 0.9125, 0.9133, 0.9128, 0.9126, 0.9128,
        0.9133, 0.9133, 0.9128, 0.9132, 0.9131, 0.9132, 0.9141, 0.9127, 0.9134,
        0.9135, 0.9128, 0.9134, 0.9132, 0.9129, 0.9134, 0.9132, 0.9129, 0.9133,
        0.9134, 0.9126, 0.9131, 0.9132, 0.9133, 0.9131, 0.9135, 0.9139, 0.9135,
        0.9148, 0.9135], device='cuda:0', requires_grad=True)
Epoch: 006/100, Runtime 1.905598, Loss 0.950264, forward nfe 184, backward nfe 36, Train: 0.9667, Val: 0.7479, Test: 0.7300, Best time: 5.7994
K_d =  Parameter containing:
tensor([0.8979, 0.8986, 0.8980, 0.8979, 0.8977, 0.8992, 0.8992, 0.8987, 0.8979,
        0.8991, 0.8984, 0.8993, 0.8989, 0.9005, 0.8981, 0.8988, 0.8991, 0.8995,
        0.8992, 0.8995, 0.8991, 0.8986, 0.8985, 0.8996, 0.8983, 0.8983, 0.8991,
        0.8996, 0.8984, 0.8982, 0.8977, 0.8995, 0.8980, 0.8983, 0.8995, 0.8989,
        0.8986, 0.8987, 0.8995, 0.8995, 0.8995, 0.8993, 0.8988, 0.8995, 0.8995,
        0.8978, 0.8993, 0.8982, 0.8986, 0.8978, 0.8980, 0.8987, 0.8985, 0.8977,
        0.8977, 0.8985, 0.8985, 0.8986, 0.8993, 0.8994, 0.8983, 0.8988, 0.8980,
        0.9005, 0.8985, 0.9022, 0.8994, 0.8981, 0.9017, 0.8985, 0.8995, 0.8992,
        0.8985, 0.9008, 0.8994, 0.8986, 0.8996, 0.8996, 0.8994, 0.8987, 0.8996,
        0.8988, 0.8988, 0.9011, 0.8991, 0.9005, 0.8980, 0.8987, 0.9001, 0.8999,
        0.8981, 0.8995, 0.8995, 0.8983, 0.8979, 0.8992, 0.8984, 0.8983, 0.8987,
        0.8991, 0.8993, 0.8984, 0.8991, 0.8988, 0.8989, 0.9005, 0.8983, 0.8993,
        0.8994, 0.8985, 0.8992, 0.8994, 0.8987, 0.8992, 0.8992, 0.8987, 0.8991,
        0.8994, 0.8982, 0.8990, 0.8991, 0.8992, 0.8990, 0.8995, 0.8999, 0.8994,
        0.9011, 0.8995], device='cuda:0', requires_grad=True)
Epoch: 007/100, Runtime 1.687667, Loss 0.909089, forward nfe 218, backward nfe 43, Train: 0.9667, Val: 0.7556, Test: 0.7370, Best time: 5.7600
K_d =  Parameter containing:
tensor([0.8835, 0.8846, 0.8835, 0.8834, 0.8833, 0.8852, 0.8850, 0.8844, 0.8835,
        0.8848, 0.8841, 0.8854, 0.8848, 0.8866, 0.8839, 0.8846, 0.8851, 0.8856,
        0.8850, 0.8856, 0.8849, 0.8843, 0.8841, 0.8856, 0.8837, 0.8839, 0.8849,
        0.8857, 0.8842, 0.8838, 0.8831, 0.8855, 0.8836, 0.8839, 0.8856, 0.8846,
        0.8843, 0.8846, 0.8856, 0.8856, 0.8856, 0.8853, 0.8844, 0.8856, 0.8854,
        0.8832, 0.8853, 0.8839, 0.8846, 0.8833, 0.8835, 0.8847, 0.8841, 0.8831,
        0.8832, 0.8844, 0.8840, 0.8843, 0.8853, 0.8854, 0.8838, 0.8846, 0.8834,
        0.8867, 0.8844, 0.8886, 0.8855, 0.8838, 0.8882, 0.8842, 0.8856, 0.8852,
        0.8841, 0.8872, 0.8854, 0.8841, 0.8857, 0.8857, 0.8855, 0.8846, 0.8857,
        0.8846, 0.8847, 0.8875, 0.8850, 0.8863, 0.8838, 0.8847, 0.8861, 0.8857,
        0.8836, 0.8856, 0.8853, 0.8840, 0.8833, 0.8853, 0.8842, 0.8841, 0.8846,
        0.8851, 0.8854, 0.8839, 0.8851, 0.8845, 0.8846, 0.8869, 0.8838, 0.8852,
        0.8855, 0.8842, 0.8851, 0.8855, 0.8847, 0.8851, 0.8852, 0.8846, 0.8849,
        0.8855, 0.8839, 0.8849, 0.8851, 0.8852, 0.8849, 0.8856, 0.8859, 0.8855,
        0.8873, 0.8856], device='cuda:0', requires_grad=True)
Epoch: 008/100, Runtime 1.763705, Loss 0.886480, forward nfe 252, backward nfe 50, Train: 0.9667, Val: 0.7604, Test: 0.7431, Best time: 5.7554
K_d =  Parameter containing:
tensor([0.8692, 0.8706, 0.8689, 0.8690, 0.8690, 0.8714, 0.8710, 0.8701, 0.8691,
        0.8705, 0.8700, 0.8716, 0.8709, 0.8727, 0.8696, 0.8704, 0.8711, 0.8718,
        0.8710, 0.8719, 0.8707, 0.8700, 0.8697, 0.8717, 0.8692, 0.8695, 0.8706,
        0.8719, 0.8698, 0.8693, 0.8687, 0.8717, 0.8694, 0.8695, 0.8719, 0.8704,
        0.8699, 0.8705, 0.8718, 0.8718, 0.8718, 0.8715, 0.8700, 0.8718, 0.8712,
        0.8687, 0.8713, 0.8695, 0.8708, 0.8688, 0.8697, 0.8708, 0.8697, 0.8685,
        0.8686, 0.8703, 0.8695, 0.8702, 0.8713, 0.8716, 0.8693, 0.8707, 0.8689,
        0.8732, 0.8704, 0.8748, 0.8716, 0.8695, 0.8745, 0.8698, 0.8718, 0.8713,
        0.8698, 0.8734, 0.8715, 0.8697, 0.8719, 0.8719, 0.8717, 0.8707, 0.8719,
        0.8704, 0.8706, 0.8737, 0.8708, 0.8727, 0.8695, 0.8708, 0.8723, 0.8715,
        0.8692, 0.8717, 0.8713, 0.8697, 0.8688, 0.8714, 0.8700, 0.8701, 0.8704,
        0.8710, 0.8714, 0.8694, 0.8712, 0.8703, 0.8703, 0.8735, 0.8693, 0.8710,
        0.8717, 0.8699, 0.8710, 0.8716, 0.8705, 0.8711, 0.8712, 0.8706, 0.8708,
        0.8717, 0.8697, 0.8709, 0.8712, 0.8713, 0.8711, 0.8718, 0.8718, 0.8716,
        0.8739, 0.8717], device='cuda:0', requires_grad=True)
Epoch: 009/100, Runtime 1.859241, Loss 0.820989, forward nfe 286, backward nfe 57, Train: 0.9833, Val: 0.7639, Test: 0.7442, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.8548, 0.8566, 0.8549, 0.8546, 0.8547, 0.8577, 0.8570, 0.8557, 0.8546,
        0.8563, 0.8559, 0.8579, 0.8571, 0.8587, 0.8553, 0.8565, 0.8569, 0.8581,
        0.8571, 0.8582, 0.8564, 0.8556, 0.8553, 0.8579, 0.8547, 0.8550, 0.8564,
        0.8583, 0.8556, 0.8550, 0.8542, 0.8579, 0.8551, 0.8550, 0.8582, 0.8566,
        0.8556, 0.8567, 0.8581, 0.8581, 0.8581, 0.8578, 0.8556, 0.8582, 0.8575,
        0.8542, 0.8575, 0.8551, 0.8569, 0.8545, 0.8558, 0.8569, 0.8553, 0.8540,
        0.8542, 0.8560, 0.8550, 0.8560, 0.8573, 0.8580, 0.8547, 0.8569, 0.8544,
        0.8596, 0.8563, 0.8610, 0.8580, 0.8552, 0.8608, 0.8555, 0.8582, 0.8576,
        0.8555, 0.8597, 0.8576, 0.8552, 0.8582, 0.8582, 0.8580, 0.8568, 0.8582,
        0.8562, 0.8566, 0.8599, 0.8569, 0.8588, 0.8555, 0.8569, 0.8584, 0.8571,
        0.8548, 0.8580, 0.8573, 0.8553, 0.8542, 0.8577, 0.8557, 0.8561, 0.8561,
        0.8569, 0.8575, 0.8550, 0.8575, 0.8561, 0.8560, 0.8600, 0.8549, 0.8568,
        0.8579, 0.8556, 0.8570, 0.8576, 0.8563, 0.8572, 0.8574, 0.8566, 0.8568,
        0.8580, 0.8555, 0.8572, 0.8575, 0.8576, 0.8573, 0.8581, 0.8577, 0.8578,
        0.8605, 0.8580], device='cuda:0', requires_grad=True)
Epoch: 010/100, Runtime 1.757262, Loss 0.773734, forward nfe 320, backward nfe 65, Train: 0.9833, Val: 0.7639, Test: 0.7442, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.8409, 0.8425, 0.8407, 0.8404, 0.8404, 0.8441, 0.8430, 0.8416, 0.8411,
        0.8430, 0.8417, 0.8443, 0.8435, 0.8447, 0.8413, 0.8425, 0.8430, 0.8445,
        0.8433, 0.8447, 0.8424, 0.8424, 0.8409, 0.8440, 0.8404, 0.8406, 0.8426,
        0.8447, 0.8415, 0.8406, 0.8397, 0.8443, 0.8409, 0.8412, 0.8447, 0.8428,
        0.8413, 0.8433, 0.8446, 0.8445, 0.8446, 0.8442, 0.8414, 0.8446, 0.8439,
        0.8399, 0.8436, 0.8415, 0.8431, 0.8407, 0.8420, 0.8430, 0.8409, 0.8395,
        0.8397, 0.8420, 0.8407, 0.8419, 0.8434, 0.8444, 0.8402, 0.8430, 0.8404,
        0.8460, 0.8421, 0.8478, 0.8444, 0.8409, 0.8477, 0.8415, 0.8446, 0.8440,
        0.8413, 0.8467, 0.8438, 0.8414, 0.8447, 0.8447, 0.8444, 0.8431, 0.8447,
        0.8423, 0.8426, 0.8460, 0.8428, 0.8461, 0.8417, 0.8433, 0.8449, 0.8434,
        0.8405, 0.8444, 0.8434, 0.8412, 0.8398, 0.8441, 0.8415, 0.8422, 0.8421,
        0.8429, 0.8439, 0.8405, 0.8439, 0.8418, 0.8419, 0.8468, 0.8406, 0.8433,
        0.8442, 0.8412, 0.8429, 0.8437, 0.8428, 0.8432, 0.8440, 0.8426, 0.8427,
        0.8444, 0.8414, 0.8438, 0.8438, 0.8440, 0.8436, 0.8446, 0.8440, 0.8441,
        0.8469, 0.8444], device='cuda:0', requires_grad=True)
Epoch: 011/100, Runtime 1.975631, Loss 0.707789, forward nfe 354, backward nfe 73, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 5.7454
K_d =  Parameter containing:
tensor([0.8270, 0.8283, 0.8265, 0.8263, 0.8261, 0.8306, 0.8292, 0.8276, 0.8276,
        0.8297, 0.8275, 0.8308, 0.8299, 0.8307, 0.8274, 0.8286, 0.8291, 0.8310,
        0.8294, 0.8313, 0.8284, 0.8291, 0.8265, 0.8303, 0.8262, 0.8262, 0.8288,
        0.8313, 0.8274, 0.8263, 0.8253, 0.8307, 0.8266, 0.8274, 0.8312, 0.8292,
        0.8271, 0.8300, 0.8312, 0.8311, 0.8312, 0.8308, 0.8271, 0.8312, 0.8304,
        0.8255, 0.8299, 0.8279, 0.8291, 0.8268, 0.8283, 0.8291, 0.8265, 0.8251,
        0.8254, 0.8280, 0.8264, 0.8279, 0.8295, 0.8310, 0.8260, 0.8292, 0.8265,
        0.8324, 0.8280, 0.8345, 0.8310, 0.8266, 0.8345, 0.8275, 0.8312, 0.8305,
        0.8271, 0.8338, 0.8301, 0.8275, 0.8313, 0.8313, 0.8310, 0.8296, 0.8313,
        0.8284, 0.8286, 0.8322, 0.8288, 0.8333, 0.8280, 0.8297, 0.8312, 0.8298,
        0.8262, 0.8308, 0.8296, 0.8271, 0.8254, 0.8307, 0.8274, 0.8283, 0.8281,
        0.8290, 0.8303, 0.8261, 0.8304, 0.8276, 0.8278, 0.8334, 0.8264, 0.8299,
        0.8307, 0.8269, 0.8289, 0.8298, 0.8292, 0.8293, 0.8306, 0.8288, 0.8287,
        0.8310, 0.8273, 0.8304, 0.8304, 0.8305, 0.8301, 0.8312, 0.8303, 0.8304,
        0.8333, 0.8310], device='cuda:0', requires_grad=True)
Epoch: 012/100, Runtime 1.779697, Loss 0.666211, forward nfe 388, backward nfe 80, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.8130, 0.8142, 0.8124, 0.8122, 0.8117, 0.8173, 0.8153, 0.8137, 0.8141,
        0.8162, 0.8133, 0.8175, 0.8165, 0.8167, 0.8133, 0.8147, 0.8151, 0.8176,
        0.8155, 0.8180, 0.8144, 0.8157, 0.8121, 0.8165, 0.8120, 0.8118, 0.8150,
        0.8181, 0.8136, 0.8121, 0.8110, 0.8172, 0.8123, 0.8136, 0.8180, 0.8154,
        0.8128, 0.8165, 0.8179, 0.8177, 0.8179, 0.8175, 0.8129, 0.8179, 0.8168,
        0.8112, 0.8161, 0.8141, 0.8151, 0.8129, 0.8146, 0.8152, 0.8122, 0.8107,
        0.8111, 0.8139, 0.8123, 0.8139, 0.8157, 0.8177, 0.8117, 0.8157, 0.8125,
        0.8187, 0.8142, 0.8212, 0.8177, 0.8123, 0.8212, 0.8136, 0.8179, 0.8172,
        0.8129, 0.8207, 0.8164, 0.8135, 0.8180, 0.8180, 0.8177, 0.8162, 0.8180,
        0.8144, 0.8148, 0.8182, 0.8147, 0.8202, 0.8141, 0.8163, 0.8175, 0.8161,
        0.8119, 0.8173, 0.8159, 0.8130, 0.8110, 0.8173, 0.8133, 0.8145, 0.8140,
        0.8151, 0.8167, 0.8117, 0.8170, 0.8134, 0.8137, 0.8199, 0.8121, 0.8163,
        0.8172, 0.8126, 0.8149, 0.8165, 0.8156, 0.8155, 0.8170, 0.8150, 0.8146,
        0.8177, 0.8131, 0.8168, 0.8170, 0.8172, 0.8168, 0.8179, 0.8165, 0.8168,
        0.8195, 0.8176], device='cuda:0', requires_grad=True)
Epoch: 013/100, Runtime 2.108584, Loss 0.582568, forward nfe 422, backward nfe 88, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.7990, 0.8001, 0.7983, 0.7981, 0.7974, 0.8041, 0.8016, 0.7998, 0.8005,
        0.8027, 0.7991, 0.8044, 0.8033, 0.8028, 0.7993, 0.8009, 0.8012, 0.8044,
        0.8015, 0.8049, 0.8006, 0.8024, 0.7978, 0.8028, 0.7978, 0.7974, 0.8012,
        0.8049, 0.7999, 0.7978, 0.7967, 0.8038, 0.7980, 0.7999, 0.8048, 0.8017,
        0.7985, 0.8030, 0.8047, 0.8045, 0.8048, 0.8043, 0.7985, 0.8048, 0.8032,
        0.7969, 0.8025, 0.8004, 0.8011, 0.7991, 0.8009, 0.8013, 0.7979, 0.7963,
        0.7969, 0.7997, 0.7981, 0.7999, 0.8019, 0.8045, 0.7976, 0.8022, 0.7984,
        0.8049, 0.8004, 0.8079, 0.8045, 0.7981, 0.8079, 0.7996, 0.8048, 0.8040,
        0.7988, 0.8075, 0.8028, 0.7995, 0.8048, 0.8049, 0.8045, 0.8029, 0.8049,
        0.8005, 0.8010, 0.8044, 0.8006, 0.8071, 0.8003, 0.8030, 0.8038, 0.8025,
        0.7976, 0.8040, 0.8021, 0.7990, 0.7966, 0.8041, 0.7992, 0.8008, 0.8000,
        0.8012, 0.8033, 0.7974, 0.8038, 0.7992, 0.7997, 0.8065, 0.7979, 0.8027,
        0.8038, 0.7983, 0.8009, 0.8031, 0.8021, 0.8017, 0.8034, 0.8013, 0.8006,
        0.8045, 0.7989, 0.8033, 0.8038, 0.8040, 0.8035, 0.8047, 0.8028, 0.8033,
        0.8058, 0.8043], device='cuda:0', requires_grad=True)
Epoch: 014/100, Runtime 1.786093, Loss 0.562161, forward nfe 456, backward nfe 96, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.7850, 0.7859, 0.7843, 0.7842, 0.7830, 0.7910, 0.7880, 0.7862, 0.7869,
        0.7894, 0.7851, 0.7913, 0.7902, 0.7890, 0.7852, 0.7873, 0.7872, 0.7912,
        0.7877, 0.7919, 0.7868, 0.7891, 0.7835, 0.7891, 0.7838, 0.7831, 0.7875,
        0.7919, 0.7863, 0.7837, 0.7825, 0.7905, 0.7837, 0.7861, 0.7918, 0.7882,
        0.7843, 0.7895, 0.7916, 0.7914, 0.7918, 0.7913, 0.7842, 0.7918, 0.7896,
        0.7827, 0.7889, 0.7866, 0.7870, 0.7853, 0.7871, 0.7876, 0.7838, 0.7821,
        0.7828, 0.7855, 0.7841, 0.7860, 0.7882, 0.7915, 0.7835, 0.7887, 0.7845,
        0.7911, 0.7865, 0.7948, 0.7915, 0.7841, 0.7948, 0.7858, 0.7918, 0.7909,
        0.7847, 0.7944, 0.7892, 0.7855, 0.7918, 0.7919, 0.7915, 0.7897, 0.7919,
        0.7868, 0.7872, 0.7907, 0.7867, 0.7940, 0.7867, 0.7899, 0.7902, 0.7891,
        0.7834, 0.7907, 0.7884, 0.7850, 0.7824, 0.7911, 0.7854, 0.7871, 0.7859,
        0.7875, 0.7900, 0.7831, 0.7907, 0.7850, 0.7857, 0.7928, 0.7839, 0.7892,
        0.7906, 0.7841, 0.7871, 0.7896, 0.7888, 0.7880, 0.7897, 0.7876, 0.7866,
        0.7915, 0.7849, 0.7896, 0.7907, 0.7909, 0.7904, 0.7917, 0.7892, 0.7900,
        0.7923, 0.7912], device='cuda:0', requires_grad=True)
Epoch: 015/100, Runtime 1.803533, Loss 0.530562, forward nfe 490, backward nfe 103, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.7711, 0.7718, 0.7705, 0.7705, 0.7687, 0.7781, 0.7745, 0.7727, 0.7734,
        0.7762, 0.7712, 0.7784, 0.7772, 0.7753, 0.7713, 0.7737, 0.7732, 0.7782,
        0.7738, 0.7790, 0.7732, 0.7757, 0.7693, 0.7755, 0.7699, 0.7690, 0.7740,
        0.7790, 0.7728, 0.7698, 0.7685, 0.7774, 0.7696, 0.7724, 0.7789, 0.7749,
        0.7702, 0.7762, 0.7786, 0.7784, 0.7789, 0.7784, 0.7699, 0.7789, 0.7762,
        0.7685, 0.7755, 0.7729, 0.7730, 0.7716, 0.7736, 0.7742, 0.7697, 0.7681,
        0.7688, 0.7714, 0.7703, 0.7722, 0.7745, 0.7786, 0.7695, 0.7754, 0.7705,
        0.7773, 0.7728, 0.7818, 0.7786, 0.7702, 0.7818, 0.7718, 0.7789, 0.7780,
        0.7708, 0.7813, 0.7757, 0.7717, 0.7790, 0.7790, 0.7786, 0.7767, 0.7790,
        0.7732, 0.7736, 0.7772, 0.7731, 0.7809, 0.7733, 0.7769, 0.7766, 0.7759,
        0.7693, 0.7776, 0.7748, 0.7711, 0.7682, 0.7781, 0.7716, 0.7736, 0.7719,
        0.7741, 0.7770, 0.7690, 0.7777, 0.7708, 0.7719, 0.7792, 0.7699, 0.7756,
        0.7774, 0.7699, 0.7732, 0.7763, 0.7755, 0.7746, 0.7762, 0.7742, 0.7727,
        0.7786, 0.7711, 0.7760, 0.7778, 0.7780, 0.7775, 0.7788, 0.7760, 0.7766,
        0.7790, 0.7782], device='cuda:0', requires_grad=True)
Epoch: 016/100, Runtime 1.787308, Loss 0.496213, forward nfe 524, backward nfe 110, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.7573, 0.7577, 0.7568, 0.7569, 0.7544, 0.7653, 0.7612, 0.7594, 0.7600,
        0.7631, 0.7574, 0.7657, 0.7643, 0.7618, 0.7573, 0.7603, 0.7591, 0.7653,
        0.7600, 0.7663, 0.7597, 0.7625, 0.7552, 0.7620, 0.7562, 0.7550, 0.7607,
        0.7663, 0.7596, 0.7559, 0.7547, 0.7643, 0.7555, 0.7588, 0.7662, 0.7618,
        0.7562, 0.7628, 0.7658, 0.7655, 0.7662, 0.7656, 0.7555, 0.7662, 0.7629,
        0.7544, 0.7622, 0.7591, 0.7589, 0.7579, 0.7601, 0.7608, 0.7556, 0.7541,
        0.7550, 0.7574, 0.7565, 0.7584, 0.7609, 0.7658, 0.7555, 0.7619, 0.7566,
        0.7633, 0.7591, 0.7690, 0.7658, 0.7565, 0.7689, 0.7580, 0.7662, 0.7652,
        0.7569, 0.7682, 0.7623, 0.7579, 0.7662, 0.7663, 0.7659, 0.7638, 0.7663,
        0.7597, 0.7601, 0.7639, 0.7597, 0.7678, 0.7600, 0.7640, 0.7631, 0.7628,
        0.7551, 0.7646, 0.7613, 0.7572, 0.7542, 0.7654, 0.7580, 0.7601, 0.7580,
        0.7609, 0.7641, 0.7549, 0.7649, 0.7566, 0.7580, 0.7656, 0.7562, 0.7621,
        0.7645, 0.7556, 0.7595, 0.7628, 0.7623, 0.7612, 0.7625, 0.7609, 0.7589,
        0.7659, 0.7574, 0.7623, 0.7650, 0.7652, 0.7646, 0.7661, 0.7628, 0.7634,
        0.7655, 0.7653], device='cuda:0', requires_grad=True)
Epoch: 017/100, Runtime 1.681889, Loss 0.393877, forward nfe 558, backward nfe 117, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.7435, 0.7435, 0.7433, 0.7434, 0.7401, 0.7527, 0.7479, 0.7461, 0.7468,
        0.7501, 0.7436, 0.7530, 0.7516, 0.7484, 0.7434, 0.7469, 0.7451, 0.7525,
        0.7464, 0.7537, 0.7463, 0.7495, 0.7412, 0.7485, 0.7426, 0.7411, 0.7476,
        0.7537, 0.7466, 0.7423, 0.7410, 0.7514, 0.7414, 0.7454, 0.7536, 0.7489,
        0.7423, 0.7495, 0.7531, 0.7528, 0.7536, 0.7530, 0.7412, 0.7536, 0.7496,
        0.7404, 0.7491, 0.7454, 0.7449, 0.7443, 0.7467, 0.7475, 0.7418, 0.7402,
        0.7413, 0.7434, 0.7429, 0.7448, 0.7473, 0.7532, 0.7416, 0.7485, 0.7430,
        0.7494, 0.7453, 0.7563, 0.7532, 0.7429, 0.7561, 0.7442, 0.7535, 0.7525,
        0.7432, 0.7553, 0.7489, 0.7443, 0.7536, 0.7537, 0.7533, 0.7511, 0.7537,
        0.7463, 0.7467, 0.7508, 0.7464, 0.7547, 0.7467, 0.7513, 0.7497, 0.7499,
        0.7412, 0.7517, 0.7480, 0.7435, 0.7404, 0.7527, 0.7446, 0.7467, 0.7440,
        0.7478, 0.7513, 0.7410, 0.7523, 0.7425, 0.7442, 0.7518, 0.7426, 0.7488,
        0.7516, 0.7414, 0.7459, 0.7494, 0.7493, 0.7479, 0.7488, 0.7476, 0.7452,
        0.7533, 0.7438, 0.7486, 0.7523, 0.7526, 0.7520, 0.7535, 0.7498, 0.7504,
        0.7520, 0.7525], device='cuda:0', requires_grad=True)
Epoch: 018/100, Runtime 1.811822, Loss 0.383009, forward nfe 592, backward nfe 124, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.7298, 0.7293, 0.7297, 0.7300, 0.7257, 0.7402, 0.7346, 0.7328, 0.7335,
        0.7370, 0.7299, 0.7406, 0.7391, 0.7349, 0.7296, 0.7335, 0.7311, 0.7397,
        0.7328, 0.7412, 0.7328, 0.7365, 0.7272, 0.7351, 0.7289, 0.7272, 0.7345,
        0.7413, 0.7335, 0.7287, 0.7273, 0.7386, 0.7273, 0.7320, 0.7412, 0.7359,
        0.7285, 0.7360, 0.7404, 0.7401, 0.7411, 0.7405, 0.7267, 0.7412, 0.7363,
        0.7264, 0.7360, 0.7316, 0.7308, 0.7308, 0.7332, 0.7342, 0.7280, 0.7263,
        0.7276, 0.7294, 0.7293, 0.7312, 0.7337, 0.7408, 0.7277, 0.7351, 0.7292,
        0.7355, 0.7314, 0.7436, 0.7408, 0.7293, 0.7433, 0.7304, 0.7411, 0.7400,
        0.7294, 0.7424, 0.7356, 0.7307, 0.7412, 0.7412, 0.7408, 0.7385, 0.7412,
        0.7329, 0.7334, 0.7375, 0.7331, 0.7415, 0.7334, 0.7387, 0.7362, 0.7371,
        0.7272, 0.7389, 0.7347, 0.7297, 0.7265, 0.7402, 0.7313, 0.7333, 0.7301,
        0.7347, 0.7386, 0.7271, 0.7398, 0.7284, 0.7304, 0.7381, 0.7290, 0.7354,
        0.7388, 0.7272, 0.7323, 0.7359, 0.7361, 0.7347, 0.7349, 0.7343, 0.7315,
        0.7408, 0.7302, 0.7349, 0.7398, 0.7401, 0.7394, 0.7411, 0.7367, 0.7373,
        0.7385, 0.7398], device='cuda:0', requires_grad=True)
Epoch: 019/100, Runtime 1.847172, Loss 0.336195, forward nfe 626, backward nfe 132, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.7161, 0.7153, 0.7164, 0.7167, 0.7116, 0.7279, 0.7215, 0.7196, 0.7203,
        0.7240, 0.7163, 0.7282, 0.7267, 0.7215, 0.7157, 0.7203, 0.7170, 0.7271,
        0.7192, 0.7289, 0.7196, 0.7236, 0.7133, 0.7217, 0.7154, 0.7134, 0.7215,
        0.7290, 0.7205, 0.7153, 0.7138, 0.7259, 0.7133, 0.7186, 0.7289, 0.7231,
        0.7148, 0.7227, 0.7279, 0.7276, 0.7288, 0.7281, 0.7123, 0.7289, 0.7233,
        0.7124, 0.7230, 0.7180, 0.7167, 0.7172, 0.7199, 0.7210, 0.7141, 0.7126,
        0.7140, 0.7154, 0.7158, 0.7177, 0.7203, 0.7284, 0.7139, 0.7217, 0.7156,
        0.7216, 0.7177, 0.7310, 0.7284, 0.7158, 0.7304, 0.7166, 0.7287, 0.7277,
        0.7159, 0.7295, 0.7223, 0.7171, 0.7289, 0.7289, 0.7285, 0.7261, 0.7288,
        0.7196, 0.7201, 0.7245, 0.7199, 0.7284, 0.7201, 0.7263, 0.7227, 0.7244,
        0.7133, 0.7262, 0.7214, 0.7159, 0.7128, 0.7279, 0.7179, 0.7201, 0.7163,
        0.7217, 0.7260, 0.7133, 0.7274, 0.7143, 0.7168, 0.7243, 0.7155, 0.7221,
        0.7262, 0.7131, 0.7188, 0.7224, 0.7229, 0.7216, 0.7212, 0.7212, 0.7178,
        0.7285, 0.7167, 0.7213, 0.7274, 0.7277, 0.7270, 0.7288, 0.7238, 0.7243,
        0.7251, 0.7272], device='cuda:0', requires_grad=True)
Epoch: 020/100, Runtime 1.739033, Loss 0.269591, forward nfe 660, backward nfe 139, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.7025, 0.7013, 0.7033, 0.7037, 0.6976, 0.7157, 0.7086, 0.7068, 0.7072,
        0.7112, 0.7029, 0.7161, 0.7144, 0.7084, 0.7021, 0.7073, 0.7030, 0.7146,
        0.7057, 0.7168, 0.7066, 0.7108, 0.6995, 0.7085, 0.7022, 0.7000, 0.7088,
        0.7168, 0.7077, 0.7021, 0.7005, 0.7134, 0.6994, 0.7055, 0.7167, 0.7105,
        0.7012, 0.7095, 0.7155, 0.7153, 0.7167, 0.7160, 0.6980, 0.7167, 0.7105,
        0.6986, 0.7102, 0.7044, 0.7028, 0.7039, 0.7066, 0.7081, 0.7005, 0.6991,
        0.7006, 0.7015, 0.7026, 0.7043, 0.7069, 0.7163, 0.7002, 0.7084, 0.7022,
        0.7079, 0.7040, 0.7187, 0.7163, 0.7026, 0.7177, 0.7030, 0.7165, 0.7155,
        0.7026, 0.7168, 0.7091, 0.7037, 0.7167, 0.7168, 0.7163, 0.7138, 0.7166,
        0.7066, 0.7071, 0.7118, 0.7071, 0.7154, 0.7072, 0.7140, 0.7095, 0.7121,
        0.6995, 0.7137, 0.7086, 0.7023, 0.6993, 0.7157, 0.7049, 0.7070, 0.7026,
        0.7090, 0.7137, 0.6998, 0.7152, 0.7003, 0.7033, 0.7107, 0.7022, 0.7090,
        0.7137, 0.6991, 0.7055, 0.7091, 0.7098, 0.7087, 0.7075, 0.7082, 0.7044,
        0.7163, 0.7035, 0.7077, 0.7152, 0.7155, 0.7148, 0.7166, 0.7112, 0.7116,
        0.7118, 0.7148], device='cuda:0', requires_grad=True)
Epoch: 021/100, Runtime 1.805297, Loss 0.279463, forward nfe 694, backward nfe 146, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.6891, 0.6875, 0.6904, 0.6909, 0.6838, 0.7036, 0.6958, 0.6941, 0.6943,
        0.6986, 0.6897, 0.7040, 0.7023, 0.6954, 0.6885, 0.6945, 0.6892, 0.7023,
        0.6924, 0.7048, 0.6938, 0.6982, 0.6858, 0.6953, 0.6890, 0.6866, 0.6963,
        0.7048, 0.6951, 0.6890, 0.6872, 0.7009, 0.6856, 0.6924, 0.7047, 0.6981,
        0.6878, 0.6965, 0.7032, 0.7030, 0.7046, 0.7039, 0.6839, 0.7047, 0.6979,
        0.6849, 0.6975, 0.6911, 0.6891, 0.6906, 0.6936, 0.6954, 0.6870, 0.6858,
        0.6874, 0.6877, 0.6896, 0.6911, 0.6936, 0.7042, 0.6867, 0.6953, 0.6888,
        0.6942, 0.6905, 0.7065, 0.7042, 0.6895, 0.7051, 0.6895, 0.7044, 0.7034,
        0.6894, 0.7042, 0.6961, 0.6904, 0.7047, 0.7048, 0.7043, 0.7017, 0.7045,
        0.6939, 0.6942, 0.6992, 0.6945, 0.7026, 0.6944, 0.7019, 0.6965, 0.7000,
        0.6859, 0.7013, 0.6958, 0.6888, 0.6859, 0.7036, 0.6920, 0.6940, 0.6891,
        0.6965, 0.7015, 0.6865, 0.7031, 0.6864, 0.6899, 0.6973, 0.6891, 0.6960,
        0.7014, 0.6852, 0.6924, 0.6959, 0.6969, 0.6959, 0.6941, 0.6954, 0.6910,
        0.7043, 0.6904, 0.6942, 0.7031, 0.7035, 0.7027, 0.7046, 0.6988, 0.6989,
        0.6988, 0.7025], device='cuda:0', requires_grad=True)
Epoch: 022/100, Runtime 1.704216, Loss 0.247708, forward nfe 728, backward nfe 153, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
K_d =  Parameter containing:
tensor([0.6758, 0.6739, 0.6776, 0.6781, 0.6701, 0.6917, 0.6832, 0.6815, 0.6816,
        0.6861, 0.6767, 0.6921, 0.6904, 0.6826, 0.6752, 0.6817, 0.6755, 0.6901,
        0.6793, 0.6929, 0.6812, 0.6857, 0.6723, 0.6824, 0.6761, 0.6735, 0.6840,
        0.6930, 0.6827, 0.6761, 0.6742, 0.6886, 0.6721, 0.6795, 0.6929, 0.6858,
        0.6745, 0.6838, 0.6911, 0.6909, 0.6927, 0.6920, 0.6699, 0.6928, 0.6854,
        0.6714, 0.6850, 0.6778, 0.6756, 0.6775, 0.6806, 0.6827, 0.6737, 0.6727,
        0.6743, 0.6742, 0.6767, 0.6781, 0.6805, 0.6924, 0.6734, 0.6824, 0.6757,
        0.6808, 0.6772, 0.6944, 0.6924, 0.6766, 0.6927, 0.6763, 0.6925, 0.6915,
        0.6764, 0.6918, 0.6832, 0.6773, 0.6929, 0.6929, 0.6924, 0.6897, 0.6926,
        0.6812, 0.6814, 0.6868, 0.6820, 0.6900, 0.6818, 0.6900, 0.6836, 0.6880,
        0.6725, 0.6890, 0.6832, 0.6754, 0.6727, 0.6917, 0.6793, 0.6811, 0.6759,
        0.6840, 0.6894, 0.6733, 0.6911, 0.6726, 0.6768, 0.6840, 0.6762, 0.6833,
        0.6891, 0.6715, 0.6794, 0.6829, 0.6842, 0.6833, 0.6808, 0.6826, 0.6779,
        0.6924, 0.6776, 0.6809, 0.6912, 0.6916, 0.6908, 0.6927, 0.6865, 0.6864,
        0.6859, 0.6903], device='cuda:0', requires_grad=True)
Epoch: 023/100, Runtime 1.776811, Loss 0.205310, forward nfe 762, backward nfe 160, Train: 0.9833, Val: 0.7646, Test: 0.7447, Best time: 1.0000
Traceback (most recent call last):
  File "run_GNN.py", line 259, in main
    loss = train(model, optimizer, data, pos_encoding)
  File "run_GNN.py", line 89, in train
    loss.backward()
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/_tensor.py", line 363, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
best val accuracy 0.764583 with test accuracy 0.744744 at epoch 11 and best time 1.000000