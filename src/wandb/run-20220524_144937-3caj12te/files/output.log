/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torchdiffeq/_impl/misc.py:11: UserWarning: Dopri5Solver: Unexpected arguments {'step_size': 1}
  warnings.warn('{}: Unexpected arguments {}'.format(solver.__class__.__name__, unused_kwargs))
****************** Adaptive GRAND transformer function ******************
****************** Adaptive GRAND transformer function ******************
GNNEarly
m1.module.weight
torch.Size([80, 1433])
m1.module.bias
torch.Size([80])
m2.module.weight
torch.Size([7, 80])
m2.module.bias
torch.Size([7])
odeblock.odefunc.alpha_train
torch.Size([])
odeblock.odefunc.beta_train
torch.Size([])
odeblock.odefunc.alpha_sc
torch.Size([1])
odeblock.odefunc.beta_sc
torch.Size([1])
odeblock.odefunc.k_d
torch.Size([80])
odeblock.odefunc.multihead_att_layer.Q.weight
torch.Size([128, 80])
odeblock.odefunc.multihead_att_layer.Q.bias
torch.Size([128])
odeblock.odefunc.multihead_att_layer.V.weight
torch.Size([128, 80])
odeblock.odefunc.multihead_att_layer.V.bias
torch.Size([128])
odeblock.odefunc.multihead_att_layer.K.weight
torch.Size([128, 80])
odeblock.odefunc.multihead_att_layer.K.bias
torch.Size([128])
odeblock.odefunc.multihead_att_layer.Wout.weight
torch.Size([80, 16])
odeblock.odefunc.multihead_att_layer.Wout.bias
torch.Size([80])
odeblock.reg_odefunc.odefunc.alpha_train
torch.Size([])
odeblock.reg_odefunc.odefunc.beta_train
torch.Size([])
odeblock.reg_odefunc.odefunc.alpha_sc
torch.Size([1])
odeblock.reg_odefunc.odefunc.beta_sc
torch.Size([1])
odeblock.reg_odefunc.odefunc.k_d
torch.Size([80])
odeblock.reg_odefunc.odefunc.multihead_att_layer.Q.weight
torch.Size([128, 80])
odeblock.reg_odefunc.odefunc.multihead_att_layer.Q.bias
torch.Size([128])
odeblock.reg_odefunc.odefunc.multihead_att_layer.V.weight
torch.Size([128, 80])
odeblock.reg_odefunc.odefunc.multihead_att_layer.V.bias
torch.Size([128])
odeblock.reg_odefunc.odefunc.multihead_att_layer.K.weight
torch.Size([128, 80])
odeblock.reg_odefunc.odefunc.multihead_att_layer.K.bias
torch.Size([128])
odeblock.reg_odefunc.odefunc.multihead_att_layer.Wout.weight
torch.Size([80, 16])
odeblock.reg_odefunc.odefunc.multihead_att_layer.Wout.bias
torch.Size([80])
odeblock.multihead_att_layer.Q.weight
torch.Size([128, 80])
odeblock.multihead_att_layer.Q.bias
torch.Size([128])
odeblock.multihead_att_layer.V.weight
torch.Size([128, 80])
odeblock.multihead_att_layer.V.bias
torch.Size([128])
odeblock.multihead_att_layer.K.weight
torch.Size([128, 80])
odeblock.multihead_att_layer.K.bias
torch.Size([128])
odeblock.multihead_att_layer.Wout.weight
torch.Size([80, 16])
odeblock.multihead_att_layer.Wout.bias
torch.Size([80])
/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torchdiffeq/_impl/misc.py:11: UserWarning: EarlyStopDopri5: Unexpected arguments {'step_size': 1}
  warnings.warn('{}: Unexpected arguments {}'.format(solver.__class__.__name__, unused_kwargs))
K_d =  Parameter containing:
tensor([0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771],
       device='cuda:0', requires_grad=True)
Epoch: 001/100, Runtime 0.978930, Loss 1.945796, forward nfe 14, backward nfe 0, Train: 0.8929, Val: 0.4801, Test: 0.4975, Best time: 4.2403
K_d =  Parameter containing:
tensor([0.9543, 0.9546, 0.9547, 0.9549, 0.9542, 0.9542, 0.9550, 0.9545, 0.9546,
        0.9545, 0.9548, 0.9551, 0.9549, 0.9543, 0.9543, 0.9544, 0.9550, 0.9543,
        0.9547, 0.9542, 0.9545, 0.9544, 0.9543, 0.9547, 0.9548, 0.9547, 0.9551,
        0.9543, 0.9545, 0.9545, 0.9550, 0.9544, 0.9549, 0.9545, 0.9542, 0.9543,
        0.9547, 0.9549, 0.9542, 0.9545, 0.9544, 0.9546, 0.9546, 0.9547, 0.9542,
        0.9547, 0.9542, 0.9545, 0.9542, 0.9545, 0.9542, 0.9543, 0.9543, 0.9548,
        0.9545, 0.9543, 0.9544, 0.9544, 0.9542, 0.9546, 0.9551, 0.9547, 0.9550,
        0.9547, 0.9548, 0.9546, 0.9552, 0.9551, 0.9542, 0.9551, 0.9552, 0.9543,
        0.9546, 0.9545, 0.9546, 0.9544, 0.9548, 0.9548, 0.9544, 0.9547],
       device='cuda:0', requires_grad=True)
Epoch: 002/100, Runtime 1.067677, Loss 1.713108, forward nfe 54, backward nfe 0, Train: 0.9500, Val: 0.6051, Test: 0.6102, Best time: 4.0227
K_d =  Parameter containing:
tensor([0.9325, 0.9330, 0.9329, 0.9329, 0.9314, 0.9314, 0.9332, 0.9326, 0.9331,
        0.9322, 0.9330, 0.9332, 0.9336, 0.9317, 0.9318, 0.9317, 0.9340, 0.9317,
        0.9327, 0.9319, 0.9322, 0.9317, 0.9321, 0.9323, 0.9325, 0.9330, 0.9342,
        0.9317, 0.9324, 0.9323, 0.9327, 0.9325, 0.9326, 0.9325, 0.9326, 0.9316,
        0.9336, 0.9326, 0.9324, 0.9320, 0.9319, 0.9332, 0.9322, 0.9329, 0.9314,
        0.9324, 0.9315, 0.9322, 0.9315, 0.9320, 0.9319, 0.9316, 0.9330, 0.9324,
        0.9323, 0.9318, 0.9325, 0.9326, 0.9314, 0.9322, 0.9331, 0.9322, 0.9327,
        0.9322, 0.9325, 0.9325, 0.9339, 0.9328, 0.9321, 0.9333, 0.9333, 0.9318,
        0.9320, 0.9319, 0.9331, 0.9317, 0.9322, 0.9328, 0.9318, 0.9324],
       device='cuda:0', requires_grad=True)
Epoch: 003/100, Runtime 1.031001, Loss 1.381780, forward nfe 94, backward nfe 0, Train: 0.9786, Val: 0.6860, Test: 0.7056, Best time: 3.8562
K_d =  Parameter containing:
tensor([0.9103, 0.9110, 0.9124, 0.9106, 0.9089, 0.9098, 0.9111, 0.9106, 0.9113,
        0.9102, 0.9110, 0.9111, 0.9130, 0.9095, 0.9102, 0.9103, 0.9129, 0.9092,
        0.9111, 0.9096, 0.9099, 0.9092, 0.9100, 0.9098, 0.9102, 0.9112, 0.9127,
        0.9093, 0.9100, 0.9105, 0.9103, 0.9103, 0.9107, 0.9112, 0.9124, 0.9103,
        0.9121, 0.9109, 0.9108, 0.9108, 0.9096, 0.9114, 0.9098, 0.9108, 0.9087,
        0.9103, 0.9119, 0.9100, 0.9089, 0.9096, 0.9094, 0.9093, 0.9113, 0.9112,
        0.9101, 0.9092, 0.9103, 0.9107, 0.9087, 0.9099, 0.9111, 0.9097, 0.9106,
        0.9099, 0.9101, 0.9103, 0.9127, 0.9106, 0.9100, 0.9116, 0.9125, 0.9094,
        0.9094, 0.9093, 0.9113, 0.9092, 0.9097, 0.9112, 0.9094, 0.9101],
       device='cuda:0', requires_grad=True)
Epoch: 004/100, Runtime 1.001407, Loss 1.047214, forward nfe 140, backward nfe 0, Train: 0.9929, Val: 0.7294, Test: 0.7350, Best time: 3.6178
K_d =  Parameter containing:
tensor([0.8883, 0.8892, 0.8914, 0.8885, 0.8864, 0.8880, 0.8900, 0.8887, 0.8901,
        0.8882, 0.8887, 0.8890, 0.8925, 0.8874, 0.8888, 0.8889, 0.8915, 0.8870,
        0.8897, 0.8876, 0.8879, 0.8866, 0.8881, 0.8877, 0.8880, 0.8895, 0.8910,
        0.8869, 0.8878, 0.8886, 0.8878, 0.8885, 0.8887, 0.8897, 0.8923, 0.8890,
        0.8902, 0.8902, 0.8889, 0.8896, 0.8875, 0.8898, 0.8881, 0.8886, 0.8862,
        0.8886, 0.8919, 0.8877, 0.8865, 0.8873, 0.8883, 0.8873, 0.8900, 0.8904,
        0.8882, 0.8866, 0.8881, 0.8899, 0.8872, 0.8875, 0.8891, 0.8874, 0.8891,
        0.8877, 0.8877, 0.8882, 0.8914, 0.8888, 0.8878, 0.8903, 0.8913, 0.8871,
        0.8872, 0.8870, 0.8910, 0.8881, 0.8879, 0.8895, 0.8873, 0.8881],
       device='cuda:0', requires_grad=True)
Epoch: 005/100, Runtime 1.339843, Loss 0.742090, forward nfe 186, backward nfe 0, Train: 1.0000, Val: 0.7478, Test: 0.7736, Best time: 3.9876
K_d =  Traceback (most recent call last):
  File "run_GNN.py", line 295, in main
    print("K_d = ", model.odeblock.odefunc.k_d)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/nn/parameter.py", line 37, in __repr__
    return 'Parameter containing:\n' + super(Parameter, self).__repr__()
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/_tensor.py", line 305, in __repr__
    return torch._tensor_str._str(self)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/_tensor_str.py", line 434, in _str
    return _str_intern(self)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/_tensor_str.py", line 409, in _str_intern
    tensor_str = _tensor_str(self, indent)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/_tensor_str.py", line 264, in _tensor_str
    formatter = _Formatter(get_summarized_data(self) if summarize else self)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/_tensor_str.py", line 130, in __init__
    if nonzero_finite_max / nonzero_finite_min > 1000.\
KeyboardInterrupt
best val accuracy 0.756618 with test accuracy 0.771574 at epoch 6 and best time 3.776995