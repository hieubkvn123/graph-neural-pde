****************** Extended Laplacian Function V.3 ******************
K =  None
Alpha =  1.0
*********************************************************************
****************** Extended Laplacian Function V.3 ******************
K =  None
Alpha =  1.0
*********************************************************************
GNNEarly
m1.module.weight
torch.Size([80, 1433])
m1.module.bias
torch.Size([80])
m2.module.weight
torch.Size([7, 80])
m2.module.bias
torch.Size([7])
odeblock.odefunc.alpha_train
torch.Size([])
odeblock.odefunc.beta_train
torch.Size([])
odeblock.odefunc.alpha_sc
torch.Size([1])
odeblock.odefunc.beta_sc
torch.Size([1])
odeblock.odefunc.w
torch.Size([80, 80])
odeblock.odefunc.d
torch.Size([80])
odeblock.odefunc.k_d
torch.Size([80])
odeblock.reg_odefunc.odefunc.alpha_train
torch.Size([])
odeblock.reg_odefunc.odefunc.beta_train
torch.Size([])
odeblock.reg_odefunc.odefunc.alpha_sc
torch.Size([1])
odeblock.reg_odefunc.odefunc.beta_sc
torch.Size([1])
odeblock.reg_odefunc.odefunc.w
torch.Size([80, 80])
odeblock.reg_odefunc.odefunc.d
torch.Size([80])
odeblock.reg_odefunc.odefunc.k_d
torch.Size([80])
odeblock.multihead_att_layer.Q.weight
torch.Size([128, 80])
odeblock.multihead_att_layer.Q.bias
torch.Size([128])
odeblock.multihead_att_layer.V.weight
torch.Size([128, 80])
odeblock.multihead_att_layer.V.bias
torch.Size([128])
odeblock.multihead_att_layer.K.weight
torch.Size([128, 80])
odeblock.multihead_att_layer.K.bias
torch.Size([128])
odeblock.multihead_att_layer.Wout.weight
torch.Size([80, 16])
odeblock.multihead_att_layer.Wout.bias
torch.Size([80])
/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torchdiffeq/_impl/misc.py:11: UserWarning: Dopri5Solver: Unexpected arguments {'step_size': 1}
  warnings.warn('{}: Unexpected arguments {}'.format(solver.__class__.__name__, unused_kwargs))
/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torchdiffeq/_impl/misc.py:11: UserWarning: EarlyStopDopri5: Unexpected arguments {'step_size': 1}
  warnings.warn('{}: Unexpected arguments {}'.format(solver.__class__.__name__, unused_kwargs))
K_d =  Parameter containing:
tensor([0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771,
        0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771,
        0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771,
        0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771,
        0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771,
        0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771,
        0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771,
        0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771,
        0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771, 0.4771],
       device='cuda:0', requires_grad=True)
Epoch: 001/100, Runtime 1.504216, Loss 1.950295, forward nfe 50, backward nfe 0, Train: 0.5429, Val: 0.4360, Test: 0.4376, Best time: 6.6726
K_d =  Parameter containing:
tensor([0.4542, 0.4544, 0.4570, 0.4547, 0.4543, 0.4548, 0.4542, 0.4547, 0.4556,
        0.4550, 0.4556, 0.4550, 0.4546, 0.4545, 0.4550, 0.4579, 0.4542, 0.4548,
        0.4548, 0.4569, 0.4547, 0.4563, 0.4551, 0.4562, 0.4544, 0.4591, 0.4576,
        0.4587, 0.4569, 0.4542, 0.4543, 0.4557, 0.4545, 0.4578, 0.4544, 0.4545,
        0.4546, 0.4548, 0.4547, 0.4555, 0.4554, 0.4552, 0.4568, 0.4545, 0.4547,
        0.4545, 0.4581, 0.4577, 0.4551, 0.4546, 0.4566, 0.4563, 0.4570, 0.4547,
        0.4546, 0.4566, 0.4569, 0.4554, 0.4545, 0.4542, 0.4561, 0.4566, 0.4542,
        0.4558, 0.4543, 0.4544, 0.4542, 0.4571, 0.4542, 0.4578, 0.4555, 0.4552,
        0.4579, 0.4587, 0.4564, 0.4575, 0.4543, 0.4543, 0.4567, 0.4550],
       device='cuda:0', requires_grad=True)
Epoch: 002/100, Runtime 1.435566, Loss 1.932671, forward nfe 222, backward nfe 0, Train: 0.5429, Val: 0.4360, Test: 0.4376, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.4318, 0.4336, 0.4373, 0.4341, 0.4317, 0.4334, 0.4319, 0.4333, 0.4366,
        0.4359, 0.4350, 0.4373, 0.4328, 0.4335, 0.4348, 0.4416, 0.4347, 0.4325,
        0.4327, 0.4359, 0.4326, 0.4371, 0.4362, 0.4369, 0.4325, 0.4443, 0.4408,
        0.4436, 0.4390, 0.4319, 0.4320, 0.4390, 0.4345, 0.4425, 0.4364, 0.4323,
        0.4355, 0.4324, 0.4329, 0.4347, 0.4337, 0.4339, 0.4380, 0.4320, 0.4372,
        0.4324, 0.4411, 0.4427, 0.4356, 0.4347, 0.4400, 0.4369, 0.4390, 0.4340,
        0.4326, 0.4382, 0.4392, 0.4389, 0.4328, 0.4320, 0.4392, 0.4388, 0.4318,
        0.4359, 0.4319, 0.4319, 0.4317, 0.4404, 0.4317, 0.4413, 0.4371, 0.4352,
        0.4426, 0.4422, 0.4387, 0.4394, 0.4330, 0.4338, 0.4375, 0.4346],
       device='cuda:0', requires_grad=True)
Epoch: 003/100, Runtime 1.433429, Loss 1.798350, forward nfe 394, backward nfe 0, Train: 0.5429, Val: 0.4360, Test: 0.4376, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.4098, 0.4164, 0.4191, 0.4173, 0.4095, 0.4125, 0.4102, 0.4141, 0.4190,
        0.4195, 0.4186, 0.4212, 0.4115, 0.4139, 0.4176, 0.4248, 0.4196, 0.4106,
        0.4111, 0.4173, 0.4129, 0.4209, 0.4219, 0.4202, 0.4106, 0.4300, 0.4271,
        0.4275, 0.4222, 0.4102, 0.4101, 0.4228, 0.4177, 0.4283, 0.4206, 0.4104,
        0.4195, 0.4125, 0.4118, 0.4144, 0.4124, 0.4128, 0.4227, 0.4103, 0.4237,
        0.4102, 0.4230, 0.4261, 0.4191, 0.4201, 0.4255, 0.4208, 0.4231, 0.4179,
        0.4111, 0.4220, 0.4252, 0.4237, 0.4117, 0.4102, 0.4230, 0.4241, 0.4100,
        0.4181, 0.4100, 0.4095, 0.4096, 0.4259, 0.4097, 0.4273, 0.4207, 0.4171,
        0.4278, 0.4275, 0.4228, 0.4259, 0.4153, 0.4156, 0.4220, 0.4180],
       device='cuda:0', requires_grad=True)
Epoch: 004/100, Runtime 1.377418, Loss 1.560752, forward nfe 560, backward nfe 0, Train: 0.7500, Val: 0.5588, Test: 0.5756, Best time: 14.4574
K_d =  Parameter containing:
tensor([0.3885, 0.4007, 0.4008, 0.4015, 0.3875, 0.3920, 0.3890, 0.3957, 0.4005,
        0.4033, 0.4005, 0.4035, 0.3901, 0.3935, 0.4006, 0.4076, 0.4059, 0.3891,
        0.3899, 0.3985, 0.3936, 0.4072, 0.4056, 0.4062, 0.3886, 0.4140, 0.4134,
        0.4105, 0.4043, 0.3890, 0.3886, 0.4060, 0.4003, 0.4123, 0.4039, 0.3890,
        0.4058, 0.3948, 0.3912, 0.3947, 0.3916, 0.3921, 0.4055, 0.3891, 0.4078,
        0.3889, 0.4047, 0.4089, 0.4012, 0.4059, 0.4107, 0.4041, 0.4064, 0.4032,
        0.3901, 0.4056, 0.4119, 0.4075, 0.3912, 0.3890, 0.4075, 0.4082, 0.3887,
        0.4019, 0.3885, 0.3877, 0.3882, 0.4097, 0.3883, 0.4133, 0.4061, 0.4003,
        0.4114, 0.4116, 0.4061, 0.4106, 0.3995, 0.3977, 0.4047, 0.4012],
       device='cuda:0', requires_grad=True)
Epoch: 005/100, Runtime 1.372444, Loss 1.261833, forward nfe 720, backward nfe 0, Train: 0.8071, Val: 0.6375, Test: 0.6294, Best time: 20.2237
K_d =  Parameter containing:
tensor([0.3677, 0.3852, 0.3839, 0.3882, 0.3661, 0.3720, 0.3683, 0.3784, 0.3810,
        0.3875, 0.3853, 0.3847, 0.3692, 0.3734, 0.3831, 0.3893, 0.3922, 0.3681,
        0.3692, 0.3790, 0.3775, 0.3941, 0.3883, 0.3918, 0.3687, 0.3971, 0.3983,
        0.3930, 0.3862, 0.3685, 0.3675, 0.3887, 0.3829, 0.3961, 0.3864, 0.3680,
        0.3915, 0.3792, 0.3713, 0.3755, 0.3712, 0.3719, 0.3897, 0.3676, 0.3917,
        0.3692, 0.3858, 0.3920, 0.3832, 0.3936, 0.3952, 0.3865, 0.3894, 0.3898,
        0.3696, 0.3889, 0.3999, 0.3905, 0.3713, 0.3684, 0.3920, 0.3914, 0.3680,
        0.3863, 0.3676, 0.3663, 0.3673, 0.3939, 0.3674, 0.3978, 0.3914, 0.3839,
        0.3938, 0.3945, 0.3906, 0.3948, 0.3826, 0.3792, 0.3870, 0.3866],
       device='cuda:0', requires_grad=True)
Epoch: 006/100, Runtime 1.326382, Loss 0.947631, forward nfe 880, backward nfe 0, Train: 0.8643, Val: 0.7118, Test: 0.7198, Best time: 48.0846
K_d =  Parameter containing:
tensor([0.3474, 0.3701, 0.3694, 0.3739, 0.3452, 0.3522, 0.3485, 0.3607, 0.3610,
        0.3706, 0.3696, 0.3653, 0.3485, 0.3541, 0.3658, 0.3709, 0.3768, 0.3477,
        0.3491, 0.3602, 0.3604, 0.3797, 0.3710, 0.3761, 0.3498, 0.3796, 0.3823,
        0.3778, 0.3698, 0.3485, 0.3469, 0.3712, 0.3646, 0.3796, 0.3691, 0.3476,
        0.3763, 0.3646, 0.3518, 0.3568, 0.3514, 0.3523, 0.3732, 0.3466, 0.3744,
        0.3499, 0.3681, 0.3771, 0.3664, 0.3794, 0.3792, 0.3686, 0.3726, 0.3759,
        0.3498, 0.3726, 0.3862, 0.3734, 0.3521, 0.3484, 0.3761, 0.3749, 0.3479,
        0.3711, 0.3473, 0.3455, 0.3469, 0.3776, 0.3471, 0.3824, 0.3761, 0.3669,
        0.3760, 0.3780, 0.3748, 0.3785, 0.3653, 0.3613, 0.3702, 0.3709],
       device='cuda:0', requires_grad=True)
Epoch: 007/100, Runtime 1.180262, Loss 0.687437, forward nfe 1034, backward nfe 0, Train: 0.9071, Val: 0.7897, Test: 0.7980, Best time: 51.2977
K_d =  Parameter containing:
tensor([0.3278, 0.3565, 0.3570, 0.3583, 0.3247, 0.3327, 0.3293, 0.3437, 0.3411,
        0.3539, 0.3544, 0.3476, 0.3290, 0.3353, 0.3493, 0.3528, 0.3602, 0.3279,
        0.3295, 0.3441, 0.3447, 0.3648, 0.3561, 0.3594, 0.3320, 0.3630, 0.3662,
        0.3652, 0.3550, 0.3293, 0.3263, 0.3536, 0.3464, 0.3647, 0.3530, 0.3278,
        0.3610, 0.3516, 0.3330, 0.3387, 0.3321, 0.3332, 0.3578, 0.3265, 0.3564,
        0.3311, 0.3504, 0.3641, 0.3530, 0.3644, 0.3633, 0.3502, 0.3572, 0.3605,
        0.3305, 0.3559, 0.3726, 0.3563, 0.3334, 0.3290, 0.3605, 0.3596, 0.3284,
        0.3569, 0.3276, 0.3256, 0.3272, 0.3614, 0.3274, 0.3678, 0.3611, 0.3513,
        0.3574, 0.3617, 0.3594, 0.3634, 0.3490, 0.3458, 0.3530, 0.3546],
       device='cuda:0', requires_grad=True)
Epoch: 008/100, Runtime 1.199264, Loss 0.497398, forward nfe 1182, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 41.8155
K_d =  Parameter containing:
tensor([0.3088, 0.3432, 0.3441, 0.3431, 0.3049, 0.3138, 0.3106, 0.3258, 0.3229,
        0.3402, 0.3387, 0.3293, 0.3124, 0.3171, 0.3340, 0.3355, 0.3435, 0.3086,
        0.3106, 0.3292, 0.3284, 0.3492, 0.3420, 0.3427, 0.3144, 0.3475, 0.3502,
        0.3533, 0.3399, 0.3107, 0.3059, 0.3368, 0.3301, 0.3503, 0.3374, 0.3086,
        0.3450, 0.3384, 0.3148, 0.3211, 0.3133, 0.3146, 0.3419, 0.3071, 0.3399,
        0.3122, 0.3343, 0.3502, 0.3392, 0.3483, 0.3464, 0.3347, 0.3423, 0.3448,
        0.3118, 0.3396, 0.3590, 0.3396, 0.3152, 0.3102, 0.3442, 0.3432, 0.3096,
        0.3425, 0.3085, 0.3062, 0.3081, 0.3457, 0.3085, 0.3536, 0.3473, 0.3390,
        0.3389, 0.3445, 0.3440, 0.3501, 0.3319, 0.3324, 0.3374, 0.3382],
       device='cuda:0', requires_grad=True)
Epoch: 009/100, Runtime 1.222427, Loss 0.345085, forward nfe 1324, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.2905, 0.3308, 0.3310, 0.3295, 0.2859, 0.2962, 0.2923, 0.3087, 0.3048,
        0.3255, 0.3249, 0.3114, 0.2958, 0.2986, 0.3207, 0.3187, 0.3295, 0.2900,
        0.2922, 0.3165, 0.3139, 0.3340, 0.3300, 0.3268, 0.2973, 0.3311, 0.3345,
        0.3400, 0.3248, 0.2929, 0.2857, 0.3208, 0.3163, 0.3360, 0.3259, 0.2900,
        0.3284, 0.3246, 0.2971, 0.3041, 0.2952, 0.2966, 0.3264, 0.2878, 0.3235,
        0.2938, 0.3198, 0.3364, 0.3289, 0.3331, 0.3296, 0.3205, 0.3264, 0.3305,
        0.2938, 0.3279, 0.3466, 0.3235, 0.2977, 0.2918, 0.3285, 0.3277, 0.2914,
        0.3301, 0.2901, 0.2877, 0.2898, 0.3296, 0.2901, 0.3400, 0.3360, 0.3284,
        0.3201, 0.3326, 0.3310, 0.3370, 0.3150, 0.3179, 0.3265, 0.3242],
       device='cuda:0', requires_grad=True)
Epoch: 010/100, Runtime 1.153533, Loss 0.297113, forward nfe 1466, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.2728, 0.3188, 0.3177, 0.3153, 0.2673, 0.2792, 0.2747, 0.2908, 0.2862,
        0.3131, 0.3101, 0.2929, 0.2801, 0.2823, 0.3109, 0.3040, 0.3167, 0.2720,
        0.2745, 0.3028, 0.3011, 0.3185, 0.3204, 0.3143, 0.2815, 0.3154, 0.3211,
        0.3268, 0.3108, 0.2757, 0.2662, 0.3047, 0.3055, 0.3231, 0.3150, 0.2721,
        0.3120, 0.3103, 0.2800, 0.2876, 0.2776, 0.2788, 0.3124, 0.2717, 0.3087,
        0.2768, 0.3056, 0.3237, 0.3231, 0.3186, 0.3148, 0.3066, 0.3135, 0.3153,
        0.2764, 0.3159, 0.3346, 0.3071, 0.2807, 0.2740, 0.3128, 0.3120, 0.2739,
        0.3171, 0.2721, 0.2698, 0.2722, 0.3156, 0.2720, 0.3277, 0.3251, 0.3186,
        0.3016, 0.3212, 0.3204, 0.3263, 0.2980, 0.3050, 0.3233, 0.3119],
       device='cuda:0', requires_grad=True)
Epoch: 011/100, Runtime 1.126080, Loss 0.230537, forward nfe 1602, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.2557, 0.3077, 0.3051, 0.3017, 0.2503, 0.2630, 0.2578, 0.2737, 0.2685,
        0.3018, 0.2966, 0.2772, 0.2638, 0.2677, 0.3020, 0.2913, 0.3056, 0.2547,
        0.2574, 0.2903, 0.2893, 0.3033, 0.3111, 0.3028, 0.2653, 0.3013, 0.3088,
        0.3150, 0.2984, 0.2591, 0.2473, 0.2899, 0.2950, 0.3127, 0.3048, 0.2548,
        0.2970, 0.2976, 0.2635, 0.2716, 0.2606, 0.2614, 0.2979, 0.2570, 0.2943,
        0.2607, 0.2926, 0.3124, 0.3186, 0.3056, 0.3017, 0.2915, 0.3016, 0.3015,
        0.2596, 0.3048, 0.3236, 0.2915, 0.2643, 0.2569, 0.2994, 0.2964, 0.2569,
        0.3044, 0.2547, 0.2526, 0.2552, 0.3020, 0.2546, 0.3160, 0.3155, 0.3095,
        0.2858, 0.3127, 0.3114, 0.3167, 0.2822, 0.2929, 0.3211, 0.3005],
       device='cuda:0', requires_grad=True)
Epoch: 012/100, Runtime 1.056646, Loss 0.165232, forward nfe 1732, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.2392, 0.2978, 0.2958, 0.2905, 0.2335, 0.2476, 0.2426, 0.2576, 0.2552,
        0.2920, 0.2859, 0.2650, 0.2487, 0.2549, 0.2917, 0.2810, 0.2949, 0.2379,
        0.2409, 0.2804, 0.2784, 0.2890, 0.3045, 0.2925, 0.2499, 0.2883, 0.2982,
        0.3086, 0.2890, 0.2431, 0.2289, 0.2775, 0.2842, 0.3072, 0.2959, 0.2383,
        0.2830, 0.2866, 0.2476, 0.2562, 0.2443, 0.2449, 0.2853, 0.2432, 0.2816,
        0.2443, 0.2817, 0.3045, 0.3149, 0.2939, 0.2901, 0.2771, 0.2934, 0.2891,
        0.2434, 0.2959, 0.3135, 0.2796, 0.2485, 0.2407, 0.2872, 0.2827, 0.2406,
        0.2914, 0.2380, 0.2373, 0.2389, 0.2908, 0.2378, 0.3064, 0.3059, 0.3017,
        0.2738, 0.3052, 0.3032, 0.3101, 0.2688, 0.2832, 0.3190, 0.2911],
       device='cuda:0', requires_grad=True)
Epoch: 013/100, Runtime 1.086128, Loss 0.185444, forward nfe 1850, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.2233, 0.2895, 0.2921, 0.2809, 0.2174, 0.2328, 0.2294, 0.2431, 0.2418,
        0.2839, 0.2742, 0.2529, 0.2340, 0.2427, 0.2826, 0.2750, 0.2869, 0.2219,
        0.2250, 0.2690, 0.2717, 0.2748, 0.3012, 0.2855, 0.2375, 0.2777, 0.2924,
        0.3020, 0.2866, 0.2276, 0.2185, 0.2683, 0.2740, 0.3066, 0.2880, 0.2224,
        0.2700, 0.2784, 0.2323, 0.2413, 0.2285, 0.2289, 0.2749, 0.2302, 0.2677,
        0.2302, 0.2728, 0.2989, 0.3166, 0.2861, 0.2794, 0.2633, 0.2866, 0.2767,
        0.2277, 0.2863, 0.3032, 0.2684, 0.2333, 0.2253, 0.2776, 0.2683, 0.2251,
        0.2820, 0.2220, 0.2237, 0.2231, 0.2793, 0.2216, 0.3010, 0.2980, 0.2971,
        0.2629, 0.3009, 0.2990, 0.3096, 0.2586, 0.2738, 0.3185, 0.2836],
       device='cuda:0', requires_grad=True)
Epoch: 014/100, Runtime 1.033255, Loss 0.205560, forward nfe 1974, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.2081, 0.2826, 0.2903, 0.2715, 0.2018, 0.2186, 0.2174, 0.2319, 0.2382,
        0.2781, 0.2649, 0.2508, 0.2197, 0.2334, 0.2770, 0.2720, 0.2782, 0.2064,
        0.2097, 0.2602, 0.2639, 0.2639, 0.3015, 0.2826, 0.2300, 0.2712, 0.2891,
        0.3008, 0.2867, 0.2127, 0.2094, 0.2653, 0.2667, 0.3079, 0.2831, 0.2071,
        0.2597, 0.2709, 0.2175, 0.2269, 0.2133, 0.2137, 0.2657, 0.2185, 0.2584,
        0.2195, 0.2702, 0.2992, 0.3196, 0.2795, 0.2711, 0.2498, 0.2844, 0.2639,
        0.2127, 0.2793, 0.2958, 0.2642, 0.2186, 0.2104, 0.2693, 0.2624, 0.2102,
        0.2742, 0.2067, 0.2114, 0.2080, 0.2736, 0.2065, 0.2962, 0.2921, 0.2928,
        0.2574, 0.2989, 0.2986, 0.3103, 0.2517, 0.2664, 0.3196, 0.2764],
       device='cuda:0', requires_grad=True)
Epoch: 015/100, Runtime 1.036074, Loss 0.170462, forward nfe 2092, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.1936, 0.2785, 0.2892, 0.2625, 0.1881, 0.2050, 0.2062, 0.2233, 0.2375,
        0.2776, 0.2564, 0.2510, 0.2061, 0.2256, 0.2717, 0.2704, 0.2691, 0.1916,
        0.1951, 0.2520, 0.2549, 0.2561, 0.3034, 0.2808, 0.2234, 0.2677, 0.2869,
        0.3026, 0.2877, 0.1984, 0.2005, 0.2652, 0.2618, 0.3113, 0.2803, 0.1924,
        0.2532, 0.2658, 0.2033, 0.2130, 0.1987, 0.1993, 0.2584, 0.2089, 0.2537,
        0.2113, 0.2686, 0.3021, 0.3225, 0.2731, 0.2666, 0.2373, 0.2846, 0.2524,
        0.1982, 0.2739, 0.2910, 0.2630, 0.2046, 0.1959, 0.2610, 0.2606, 0.1958,
        0.2674, 0.1919, 0.1993, 0.1935, 0.2720, 0.1918, 0.2914, 0.2881, 0.2880,
        0.2567, 0.2984, 0.2992, 0.3103, 0.2497, 0.2615, 0.3210, 0.2709],
       device='cuda:0', requires_grad=True)
Epoch: 016/100, Runtime 0.996010, Loss 0.142724, forward nfe 2210, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.1796, 0.2742, 0.2892, 0.2552, 0.1767, 0.1929, 0.1966, 0.2132, 0.2391,
        0.2782, 0.2485, 0.2540, 0.1924, 0.2213, 0.2707, 0.2724, 0.2643, 0.1774,
        0.1810, 0.2438, 0.2514, 0.2483, 0.3069, 0.2820, 0.2184, 0.2681, 0.2883,
        0.3066, 0.2906, 0.1846, 0.1917, 0.2680, 0.2617, 0.3167, 0.2808, 0.1784,
        0.2477, 0.2609, 0.1897, 0.1996, 0.1848, 0.1847, 0.2525, 0.1994, 0.2512,
        0.2017, 0.2701, 0.3069, 0.3273, 0.2713, 0.2631, 0.2244, 0.2853, 0.2407,
        0.1843, 0.2703, 0.2863, 0.2648, 0.1910, 0.1824, 0.2551, 0.2610, 0.1819,
        0.2636, 0.1777, 0.1873, 0.1795, 0.2716, 0.1772, 0.2880, 0.2839, 0.2855,
        0.2588, 0.3007, 0.2997, 0.3121, 0.2493, 0.2586, 0.3243, 0.2680],
       device='cuda:0', requires_grad=True)
Epoch: 017/100, Runtime 1.034311, Loss 0.171520, forward nfe 2322, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.1663, 0.2715, 0.2906, 0.2494, 0.1664, 0.1811, 0.1869, 0.2044, 0.2419,
        0.2798, 0.2399, 0.2578, 0.1802, 0.2216, 0.2708, 0.2752, 0.2619, 0.1638,
        0.1676, 0.2342, 0.2520, 0.2409, 0.3102, 0.2819, 0.2133, 0.2666, 0.2914,
        0.3122, 0.2935, 0.1715, 0.1824, 0.2722, 0.2643, 0.3233, 0.2815, 0.1650,
        0.2403, 0.2574, 0.1766, 0.1868, 0.1714, 0.1707, 0.2471, 0.1906, 0.2468,
        0.1927, 0.2720, 0.3133, 0.3324, 0.2696, 0.2627, 0.2116, 0.2875, 0.2347,
        0.1710, 0.2672, 0.2803, 0.2680, 0.1781, 0.1692, 0.2522, 0.2622, 0.1685,
        0.2632, 0.1640, 0.1751, 0.1662, 0.2701, 0.1623, 0.2838, 0.2822, 0.2857,
        0.2613, 0.3022, 0.2999, 0.3134, 0.2495, 0.2546, 0.3271, 0.2695],
       device='cuda:0', requires_grad=True)
Epoch: 018/100, Runtime 0.995813, Loss 0.184024, forward nfe 2434, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.1535, 0.2698, 0.2940, 0.2425, 0.1568, 0.1698, 0.1764, 0.1971, 0.2444,
        0.2821, 0.2309, 0.2628, 0.1719, 0.2235, 0.2691, 0.2801, 0.2588, 0.1509,
        0.1548, 0.2244, 0.2525, 0.2347, 0.3102, 0.2812, 0.2085, 0.2666, 0.2959,
        0.3196, 0.2978, 0.1589, 0.1737, 0.2776, 0.2663, 0.3274, 0.2802, 0.1523,
        0.2342, 0.2545, 0.1641, 0.1744, 0.1586, 0.1574, 0.2410, 0.1824, 0.2447,
        0.1844, 0.2757, 0.3210, 0.3368, 0.2674, 0.2629, 0.1988, 0.2892, 0.2289,
        0.1583, 0.2644, 0.2756, 0.2729, 0.1656, 0.1562, 0.2523, 0.2652, 0.1556,
        0.2656, 0.1509, 0.1631, 0.1534, 0.2704, 0.1475, 0.2811, 0.2802, 0.2853,
        0.2650, 0.3035, 0.3002, 0.3152, 0.2510, 0.2512, 0.3289, 0.2706],
       device='cuda:0', requires_grad=True)
Epoch: 019/100, Runtime 1.038494, Loss 0.146094, forward nfe 2546, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.1413, 0.2711, 0.2987, 0.2372, 0.1478, 0.1588, 0.1645, 0.1929, 0.2472,
        0.2849, 0.2237, 0.2674, 0.1643, 0.2264, 0.2656, 0.2866, 0.2593, 0.1385,
        0.1425, 0.2171, 0.2534, 0.2306, 0.3096, 0.2809, 0.2029, 0.2691, 0.2999,
        0.3285, 0.3035, 0.1470, 0.1637, 0.2836, 0.2676, 0.3306, 0.2768, 0.1399,
        0.2326, 0.2549, 0.1522, 0.1626, 0.1464, 0.1436, 0.2362, 0.1774, 0.2433,
        0.1752, 0.2811, 0.3303, 0.3417, 0.2665, 0.2639, 0.1946, 0.2897, 0.2258,
        0.1462, 0.2638, 0.2724, 0.2778, 0.1538, 0.1432, 0.2549, 0.2669, 0.1433,
        0.2695, 0.1382, 0.1509, 0.1413, 0.2733, 0.1330, 0.2812, 0.2784, 0.2871,
        0.2703, 0.3041, 0.3018, 0.3183, 0.2544, 0.2484, 0.3301, 0.2731],
       device='cuda:0', requires_grad=True)
Epoch: 020/100, Runtime 0.906106, Loss 0.176072, forward nfe 2658, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.1297, 0.2728, 0.3041, 0.2322, 0.1384, 0.1482, 0.1518, 0.1875, 0.2515,
        0.2895, 0.2231, 0.2720, 0.1562, 0.2303, 0.2608, 0.2943, 0.2604, 0.1268,
        0.1309, 0.2168, 0.2566, 0.2271, 0.3093, 0.2828, 0.1956, 0.2728, 0.3055,
        0.3363, 0.3099, 0.1356, 0.1535, 0.2897, 0.2689, 0.3329, 0.2722, 0.1280,
        0.2325, 0.2558, 0.1408, 0.1512, 0.1347, 0.1297, 0.2318, 0.1722, 0.2453,
        0.1693, 0.2873, 0.3409, 0.3456, 0.2671, 0.2670, 0.1940, 0.2875, 0.2232,
        0.1346, 0.2660, 0.2694, 0.2836, 0.1424, 0.1304, 0.2594, 0.2693, 0.1317,
        0.2730, 0.1262, 0.1392, 0.1297, 0.2766, 0.1182, 0.2839, 0.2794, 0.2886,
        0.2772, 0.3033, 0.3041, 0.3206, 0.2596, 0.2467, 0.3305, 0.2754],
       device='cuda:0', requires_grad=True)
Epoch: 021/100, Runtime 1.013664, Loss 0.249187, forward nfe 2770, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.1187, 0.2747, 0.3096, 0.2280, 0.1300, 0.1381, 0.1387, 0.1819, 0.2545,
        0.2947, 0.2220, 0.2756, 0.1472, 0.2330, 0.2557, 0.3017, 0.2606, 0.1157,
        0.1199, 0.2165, 0.2594, 0.2235, 0.3096, 0.2840, 0.1892, 0.2767, 0.3108,
        0.3440, 0.3160, 0.1247, 0.1421, 0.2946, 0.2708, 0.3344, 0.2680, 0.1164,
        0.2319, 0.2573, 0.1299, 0.1404, 0.1237, 0.1170, 0.2278, 0.1665, 0.2474,
        0.1649, 0.2931, 0.3508, 0.3497, 0.2677, 0.2703, 0.1927, 0.2865, 0.2215,
        0.1235, 0.2679, 0.2654, 0.2884, 0.1316, 0.1167, 0.2626, 0.2705, 0.1208,
        0.2767, 0.1148, 0.1278, 0.1187, 0.2804, 0.1045, 0.2864, 0.2792, 0.2905,
        0.2825, 0.3037, 0.3064, 0.3228, 0.2643, 0.2435, 0.3298, 0.2780],
       device='cuda:0', requires_grad=True)
Epoch: 022/100, Runtime 0.939508, Loss 0.144846, forward nfe 2882, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.1082, 0.2768, 0.3153, 0.2260, 0.1211, 0.1284, 0.1266, 0.1795, 0.2581,
        0.2996, 0.2209, 0.2804, 0.1393, 0.2356, 0.2509, 0.3088, 0.2605, 0.1051,
        0.1094, 0.2170, 0.2620, 0.2220, 0.3074, 0.2856, 0.1823, 0.2812, 0.3151,
        0.3522, 0.3218, 0.1140, 0.1324, 0.3003, 0.2736, 0.3352, 0.2627, 0.1055,
        0.2322, 0.2581, 0.1196, 0.1301, 0.1131, 0.1037, 0.2250, 0.1635, 0.2503,
        0.1610, 0.2983, 0.3606, 0.3538, 0.2686, 0.2735, 0.1914, 0.2858, 0.2220,
        0.1130, 0.2702, 0.2619, 0.2946, 0.1213, 0.1021, 0.2660, 0.2725, 0.1104,
        0.2804, 0.1039, 0.1169, 0.1082, 0.2843, 0.0978, 0.2905, 0.2790, 0.2937,
        0.2896, 0.3032, 0.3091, 0.3253, 0.2689, 0.2408, 0.3281, 0.2811],
       device='cuda:0', requires_grad=True)
Epoch: 023/100, Runtime 1.052054, Loss 0.185585, forward nfe 2988, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0983, 0.2792, 0.3200, 0.2229, 0.1126, 0.1191, 0.1148, 0.1798, 0.2617,
        0.3048, 0.2197, 0.2862, 0.1308, 0.2371, 0.2464, 0.3152, 0.2589, 0.0951,
        0.0996, 0.2165, 0.2635, 0.2233, 0.3037, 0.2869, 0.1750, 0.2849, 0.3188,
        0.3600, 0.3265, 0.1037, 0.1224, 0.3057, 0.2776, 0.3367, 0.2580, 0.0951,
        0.2350, 0.2596, 0.1097, 0.1203, 0.1032, 0.0910, 0.2217, 0.1623, 0.2535,
        0.1574, 0.3029, 0.3698, 0.3575, 0.2688, 0.2766, 0.1907, 0.2864, 0.2218,
        0.1030, 0.2723, 0.2592, 0.3014, 0.1116, 0.0879, 0.2679, 0.2765, 0.1005,
        0.2837, 0.0935, 0.1071, 0.0983, 0.2878, 0.0911, 0.2936, 0.2788, 0.2948,
        0.2967, 0.3046, 0.3115, 0.3267, 0.2735, 0.2404, 0.3266, 0.2834],
       device='cuda:0', requires_grad=True)
Epoch: 024/100, Runtime 0.980034, Loss 0.170220, forward nfe 3106, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0890, 0.2820, 0.3236, 0.2201, 0.1039, 0.1103, 0.1030, 0.1808, 0.2649,
        0.3095, 0.2183, 0.2912, 0.1214, 0.2369, 0.2430, 0.3201, 0.2566, 0.0857,
        0.0902, 0.2159, 0.2642, 0.2241, 0.3021, 0.2879, 0.1694, 0.2884, 0.3223,
        0.3664, 0.3305, 0.0937, 0.1117, 0.3101, 0.2813, 0.3390, 0.2573, 0.0856,
        0.2368, 0.2607, 0.1004, 0.1109, 0.0937, 0.0797, 0.2221, 0.1616, 0.2568,
        0.1518, 0.3064, 0.3779, 0.3612, 0.2697, 0.2781, 0.1876, 0.2879, 0.2213,
        0.0936, 0.2741, 0.2559, 0.3067, 0.1023, 0.0758, 0.2696, 0.2794, 0.0912,
        0.2863, 0.0836, 0.0978, 0.0889, 0.2905, 0.0845, 0.2955, 0.2805, 0.2964,
        0.3027, 0.3060, 0.3156, 0.3286, 0.2770, 0.2392, 0.3257, 0.2855],
       device='cuda:0', requires_grad=True)
Epoch: 025/100, Runtime 1.020427, Loss 0.157365, forward nfe 3218, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0801, 0.2852, 0.3272, 0.2158, 0.0955, 0.1020, 0.0915, 0.1811, 0.2674,
        0.3141, 0.2173, 0.2950, 0.1119, 0.2355, 0.2402, 0.3243, 0.2534, 0.0768,
        0.0814, 0.2148, 0.2630, 0.2236, 0.3009, 0.2876, 0.1658, 0.2914, 0.3248,
        0.3721, 0.3340, 0.0840, 0.1015, 0.3138, 0.2843, 0.3417, 0.2569, 0.0766,
        0.2377, 0.2627, 0.0916, 0.1021, 0.0848, 0.0704, 0.2248, 0.1608, 0.2597,
        0.1461, 0.3095, 0.3846, 0.3641, 0.2700, 0.2783, 0.1847, 0.2886, 0.2191,
        0.0848, 0.2757, 0.2529, 0.3113, 0.0935, 0.0629, 0.2696, 0.2812, 0.0824,
        0.2884, 0.0738, 0.0884, 0.0801, 0.2930, 0.0786, 0.2963, 0.2824, 0.2959,
        0.3083, 0.3076, 0.3200, 0.3297, 0.2799, 0.2385, 0.3255, 0.2866],
       device='cuda:0', requires_grad=True)
Epoch: 026/100, Runtime 1.146964, Loss 0.138965, forward nfe 3330, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0717, 0.2899, 0.3308, 0.2112, 0.0862, 0.0941, 0.0814, 0.1838, 0.2697,
        0.3182, 0.2163, 0.2983, 0.1046, 0.2332, 0.2382, 0.3289, 0.2504, 0.0685,
        0.0730, 0.2129, 0.2620, 0.2222, 0.3013, 0.2858, 0.1653, 0.2940, 0.3276,
        0.3771, 0.3374, 0.0747, 0.0921, 0.3178, 0.2872, 0.3444, 0.2583, 0.0679,
        0.2384, 0.2657, 0.0832, 0.0936, 0.0763, 0.0616, 0.2265, 0.1605, 0.2619,
        0.1393, 0.3127, 0.3907, 0.3669, 0.2699, 0.2772, 0.1813, 0.2899, 0.2193,
        0.0764, 0.2768, 0.2494, 0.3153, 0.0852, 0.0558, 0.2706, 0.2822, 0.0740,
        0.2905, 0.0634, 0.0779, 0.0718, 0.2951, 0.0730, 0.2957, 0.2864, 0.2954,
        0.3135, 0.3096, 0.3244, 0.3296, 0.2824, 0.2371, 0.3257, 0.2884],
       device='cuda:0', requires_grad=True)
Epoch: 027/100, Runtime 1.013547, Loss 0.147766, forward nfe 3442, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0637, 0.2934, 0.3337, 0.2073, 0.0757, 0.0866, 0.0701, 0.1852, 0.2715,
        0.3213, 0.2160, 0.3016, 0.0969, 0.2301, 0.2358, 0.3326, 0.2487, 0.0606,
        0.0652, 0.2113, 0.2612, 0.2211, 0.3018, 0.2833, 0.1645, 0.2966, 0.3303,
        0.3817, 0.3399, 0.0657, 0.0813, 0.3214, 0.2904, 0.3475, 0.2595, 0.0598,
        0.2386, 0.2684, 0.0753, 0.0855, 0.0684, 0.0543, 0.2276, 0.1589, 0.2641,
        0.1319, 0.3155, 0.3961, 0.3690, 0.2701, 0.2756, 0.1780, 0.2909, 0.2208,
        0.0684, 0.2777, 0.2458, 0.3192, 0.0774, 0.0492, 0.2713, 0.2833, 0.0661,
        0.2919, 0.0535, 0.0678, 0.0640, 0.2973, 0.0666, 0.2939, 0.2903, 0.2947,
        0.3185, 0.3118, 0.3283, 0.3286, 0.2840, 0.2370, 0.3259, 0.2908],
       device='cuda:0', requires_grad=True)
Epoch: 028/100, Runtime 1.020077, Loss 0.089662, forward nfe 3554, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0561, 0.2968, 0.3369, 0.2044, 0.0657, 0.0794, 0.0635, 0.1868, 0.2731,
        0.3236, 0.2169, 0.3045, 0.0904, 0.2267, 0.2325, 0.3355, 0.2480, 0.0533,
        0.0579, 0.2111, 0.2604, 0.2199, 0.3026, 0.2818, 0.1621, 0.2982, 0.3328,
        0.3864, 0.3427, 0.0568, 0.0695, 0.3242, 0.2931, 0.3508, 0.2611, 0.0524,
        0.2382, 0.2702, 0.0679, 0.0779, 0.0609, 0.0466, 0.2288, 0.1569, 0.2663,
        0.1240, 0.3176, 0.4013, 0.3712, 0.2725, 0.2742, 0.1743, 0.2921, 0.2209,
        0.0609, 0.2791, 0.2421, 0.3228, 0.0700, 0.0415, 0.2712, 0.2840, 0.0585,
        0.2930, 0.0435, 0.0574, 0.0566, 0.2995, 0.0600, 0.2903, 0.2935, 0.2943,
        0.3230, 0.3134, 0.3331, 0.3284, 0.2853, 0.2365, 0.3257, 0.2928],
       device='cuda:0', requires_grad=True)
Epoch: 029/100, Runtime 1.019628, Loss 0.118322, forward nfe 3666, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0490, 0.3003, 0.3400, 0.2020, 0.0549, 0.0726, 0.0553, 0.1877, 0.2745,
        0.3251, 0.2174, 0.3069, 0.0845, 0.2223, 0.2291, 0.3383, 0.2483, 0.0464,
        0.0511, 0.2104, 0.2595, 0.2178, 0.3036, 0.2796, 0.1580, 0.2997, 0.3347,
        0.3906, 0.3459, 0.0481, 0.0607, 0.3263, 0.2957, 0.3551, 0.2619, 0.0443,
        0.2372, 0.2713, 0.0609, 0.0707, 0.0539, 0.0411, 0.2289, 0.1548, 0.2682,
        0.1151, 0.3196, 0.4057, 0.3731, 0.2749, 0.2726, 0.1706, 0.2912, 0.2213,
        0.0540, 0.2799, 0.2384, 0.3254, 0.0630, 0.0343, 0.2699, 0.2846, 0.0508,
        0.2944, 0.0333, 0.0479, 0.0498, 0.3020, 0.0532, 0.2872, 0.2955, 0.2943,
        0.3265, 0.3131, 0.3371, 0.3275, 0.2864, 0.2353, 0.3256, 0.2950],
       device='cuda:0', requires_grad=True)
Epoch: 030/100, Runtime 1.027112, Loss 0.115538, forward nfe 3784, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0422, 0.3034, 0.3427, 0.1999, 0.0433, 0.0662, 0.0466, 0.1879, 0.2754,
        0.3261, 0.2174, 0.3089, 0.0776, 0.2171, 0.2255, 0.3408, 0.2483, 0.0400,
        0.0447, 0.2089, 0.2582, 0.2160, 0.3043, 0.2774, 0.1531, 0.3016, 0.3357,
        0.3947, 0.3488, 0.0397, 0.0508, 0.3280, 0.2986, 0.3591, 0.2619, 0.0355,
        0.2359, 0.2722, 0.0543, 0.0639, 0.0474, 0.0352, 0.2293, 0.1521, 0.2699,
        0.1073, 0.3215, 0.4097, 0.3746, 0.2772, 0.2712, 0.1663, 0.2905, 0.2211,
        0.0477, 0.2801, 0.2349, 0.3273, 0.0565, 0.0257, 0.2679, 0.2853, 0.0426,
        0.2957, 0.0237, 0.0388, 0.0434, 0.3046, 0.0451, 0.2873, 0.2972, 0.2953,
        0.3294, 0.3136, 0.3406, 0.3279, 0.2871, 0.2342, 0.3250, 0.2968],
       device='cuda:0', requires_grad=True)
Epoch: 031/100, Runtime 1.149763, Loss 0.079628, forward nfe 3902, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0357, 0.3061, 0.3451, 0.1977, 0.0316, 0.0602, 0.0367, 0.1856, 0.2759,
        0.3270, 0.2172, 0.3103, 0.0702, 0.2123, 0.2225, 0.3426, 0.2477, 0.0341,
        0.0388, 0.2074, 0.2569, 0.2142, 0.3052, 0.2763, 0.1469, 0.3034, 0.3361,
        0.3983, 0.3508, 0.0325, 0.0422, 0.3291, 0.3005, 0.3626, 0.2622, 0.0276,
        0.2348, 0.2736, 0.0482, 0.0575, 0.0413, 0.0313, 0.2302, 0.1495, 0.2717,
        0.0982, 0.3228, 0.4129, 0.3760, 0.2799, 0.2696, 0.1614, 0.2890, 0.2199,
        0.0417, 0.2802, 0.2321, 0.3287, 0.0504, 0.0187, 0.2645, 0.2856, 0.0341,
        0.2967, 0.0165, 0.0317, 0.0374, 0.3067, 0.0356, 0.2876, 0.2991, 0.2950,
        0.3317, 0.3139, 0.3437, 0.3283, 0.2874, 0.2337, 0.3248, 0.2976],
       device='cuda:0', requires_grad=True)
Epoch: 032/100, Runtime 1.197950, Loss 0.080784, forward nfe 4032, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.0295, 0.3086, 0.3471, 0.1955, 0.0244, 0.0545, 0.0275, 0.1837, 0.2762,
        0.3273, 0.2160, 0.3116, 0.0621, 0.2068, 0.2207, 0.3438, 0.2471, 0.0286,
        0.0332, 0.2058, 0.2550, 0.2129, 0.3061, 0.2757, 0.1421, 0.3053, 0.3365,
        0.4014, 0.3523, 0.0255, 0.0322, 0.3299, 0.3026, 0.3656, 0.2628, 0.0206,
        0.2333, 0.2743, 0.0424, 0.0515, 0.0357, 0.0314, 0.2300, 0.1470, 0.2733,
        0.0897, 0.3240, 0.4156, 0.3776, 0.2825, 0.2682, 0.1563, 0.2887, 0.2183,
        0.0361, 0.2799, 0.2298, 0.3299, 0.0446, 0.0112, 0.2608, 0.2859, 0.0269,
        0.2973, 0.0118, 0.0234, 0.0319, 0.3085, 0.0275, 0.2887, 0.3016, 0.2948,
        0.3339, 0.3154, 0.3471, 0.3294, 0.2874, 0.2321, 0.3247, 0.2982],
       device='cuda:0', requires_grad=True)
Epoch: 033/100, Runtime 1.155804, Loss 0.092495, forward nfe 4168, backward nfe 0, Train: 0.9000, Val: 0.8272, Test: 0.8183, Best time: 32.0000
Traceback (most recent call last):
  File "run_GNN.py", line 265, in main
    tmp_train_acc, tmp_val_acc, tmp_test_acc = this_test(model, data, pos_encoding, opt)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "run_GNN.py", line 140, in test
    logits, accs = model(feat, pos_encoding), []
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/media/data-share/hieunm60/graph-neural-pde/src/GNN_early.py", line 84, in forward
    z = self.odeblock(x)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/media/data-share/hieunm60/graph-neural-pde/src/block_transformer_attention.py", line 61, in forward
    state_dt = integrator(
  File "/media/data-share/hieunm60/graph-neural-pde/src/early_stop_solver.py", line 301, in __call__
    t, solution = self.solver.integrate(t)
  File "/media/data-share/hieunm60/graph-neural-pde/src/early_stop_solver.py", line 65, in integrate
    new_t, y = self.advance(t[i])
  File "/media/data-share/hieunm60/graph-neural-pde/src/early_stop_solver.py", line 79, in advance
    train_acc, val_acc, test_acc = self.evaluate(self.rk_state)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/media/data-share/hieunm60/graph-neural-pde/src/early_stop_solver.py", line 119, in evaluate
    train_acc, val_acc, test_acc = self.ode_test(z)
  File "/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/media/data-share/hieunm60/graph-neural-pde/src/early_stop_solver.py", line 93, in test
    acc = pred.eq(self.data.y[mask]).sum().item() / mask.sum().item()
KeyboardInterrupt
best val accuracy 0.827206 with test accuracy 0.818274 at epoch 8 and best time 32.000000