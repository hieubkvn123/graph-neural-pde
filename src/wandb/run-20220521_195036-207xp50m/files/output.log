/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torchdiffeq/_impl/misc.py:11: UserWarning: Dopri5Solver: Unexpected arguments {'step_size': 1}
  warnings.warn('{}: Unexpected arguments {}'.format(solver.__class__.__name__, unused_kwargs))
/home/hieunm60/anaconda3/envs/deepgrand/lib/python3.8/site-packages/torchdiffeq/_impl/misc.py:11: UserWarning: EarlyStopDopri5: Unexpected arguments {'step_size': 1}
  warnings.warn('{}: Unexpected arguments {}'.format(solver.__class__.__name__, unused_kwargs))
****************** Extended Laplacian Function V.3 ******************
K =  None
Alpha =  1.0
*********************************************************************
****************** Extended Laplacian Function V.3 ******************
K =  None
Alpha =  1.0
*********************************************************************
GNNEarly
m1.module.weight
torch.Size([80, 1433])
m1.module.bias
torch.Size([80])
m2.module.weight
torch.Size([7, 80])
m2.module.bias
torch.Size([7])
odeblock.odefunc.alpha_train
torch.Size([])
odeblock.odefunc.beta_train
torch.Size([])
odeblock.odefunc.alpha_sc
torch.Size([1])
odeblock.odefunc.beta_sc
torch.Size([1])
odeblock.odefunc.w
torch.Size([80, 80])
odeblock.odefunc.d
torch.Size([80])
odeblock.odefunc.k_d
torch.Size([80])
odeblock.reg_odefunc.odefunc.alpha_train
torch.Size([])
odeblock.reg_odefunc.odefunc.beta_train
torch.Size([])
odeblock.reg_odefunc.odefunc.alpha_sc
torch.Size([1])
odeblock.reg_odefunc.odefunc.beta_sc
torch.Size([1])
odeblock.reg_odefunc.odefunc.w
torch.Size([80, 80])
odeblock.reg_odefunc.odefunc.d
torch.Size([80])
odeblock.reg_odefunc.odefunc.k_d
torch.Size([80])
odeblock.multihead_att_layer.Q.weight
torch.Size([128, 80])
odeblock.multihead_att_layer.Q.bias
torch.Size([128])
odeblock.multihead_att_layer.V.weight
torch.Size([128, 80])
odeblock.multihead_att_layer.V.bias
torch.Size([128])
odeblock.multihead_att_layer.K.weight
torch.Size([128, 80])
odeblock.multihead_att_layer.K.bias
torch.Size([128])
odeblock.multihead_att_layer.Wout.weight
torch.Size([80, 16])
odeblock.multihead_att_layer.Wout.bias
torch.Size([80])
K_d =  Parameter containing:
tensor([0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771,
        0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771, 0.9771],
       device='cuda:0', requires_grad=True)
Epoch: 001/100, Runtime 2.120177, Loss 1.948746, forward nfe 74, backward nfe 0, Train: 0.3214, Val: 0.3713, Test: 0.3330, Best time: 5.4086
K_d =  Parameter containing:
tensor([0.9543, 0.9542, 0.9544, 0.9543, 0.9542, 0.9548, 0.9544, 0.9545, 0.9542,
        0.9543, 0.9544, 0.9542, 0.9542, 0.9545, 0.9543, 0.9542, 0.9542, 0.9543,
        0.9543, 0.9554, 0.9543, 0.9543, 0.9551, 0.9542, 0.9543, 0.9554, 0.9553,
        0.9543, 0.9546, 0.9544, 0.9544, 0.9544, 0.9542, 0.9542, 0.9542, 0.9543,
        0.9545, 0.9543, 0.9543, 0.9548, 0.9544, 0.9544, 0.9543, 0.9544, 0.9543,
        0.9544, 0.9544, 0.9550, 0.9543, 0.9542, 0.9544, 0.9543, 0.9544, 0.9548,
        0.9543, 0.9543, 0.9548, 0.9549, 0.9542, 0.9552, 0.9544, 0.9543, 0.9543,
        0.9544, 0.9545, 0.9545, 0.9549, 0.9542, 0.9543, 0.9543, 0.9544, 0.9544,
        0.9544, 0.9542, 0.9542, 0.9553, 0.9547, 0.9547, 0.9544, 0.9543],
       device='cuda:0', requires_grad=True)
Epoch: 002/100, Runtime 2.103983, Loss 1.938578, forward nfe 348, backward nfe 0, Train: 0.3214, Val: 0.3713, Test: 0.3330, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.9318, 0.9315, 0.9320, 0.9316, 0.9314, 0.9333, 0.9319, 0.9329, 0.9316,
        0.9319, 0.9319, 0.9313, 0.9314, 0.9322, 0.9315, 0.9333, 0.9323, 0.9318,
        0.9318, 0.9351, 0.9317, 0.9318, 0.9347, 0.9331, 0.9318, 0.9356, 0.9344,
        0.9316, 0.9319, 0.9320, 0.9320, 0.9319, 0.9327, 0.9319, 0.9322, 0.9318,
        0.9319, 0.9317, 0.9323, 0.9340, 0.9319, 0.9320, 0.9318, 0.9318, 0.9317,
        0.9319, 0.9317, 0.9340, 0.9317, 0.9321, 0.9320, 0.9328, 0.9320, 0.9338,
        0.9319, 0.9327, 0.9324, 0.9340, 0.9316, 0.9337, 0.9319, 0.9317, 0.9315,
        0.9321, 0.9322, 0.9322, 0.9344, 0.9325, 0.9318, 0.9318, 0.9319, 0.9320,
        0.9316, 0.9316, 0.9319, 0.9349, 0.9338, 0.9325, 0.9320, 0.9317],
       device='cuda:0', requires_grad=True)
Epoch: 003/100, Runtime 2.274556, Loss 1.874391, forward nfe 616, backward nfe 0, Train: 0.3214, Val: 0.3713, Test: 0.3330, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.9096, 0.9090, 0.9098, 0.9091, 0.9086, 0.9137, 0.9098, 0.9120, 0.9092,
        0.9097, 0.9093, 0.9090, 0.9090, 0.9111, 0.9095, 0.9137, 0.9111, 0.9095,
        0.9096, 0.9165, 0.9092, 0.9095, 0.9157, 0.9140, 0.9096, 0.9169, 0.9155,
        0.9098, 0.9113, 0.9098, 0.9099, 0.9097, 0.9126, 0.9107, 0.9119, 0.9096,
        0.9098, 0.9094, 0.9116, 0.9140, 0.9098, 0.9098, 0.9095, 0.9091, 0.9095,
        0.9098, 0.9101, 0.9144, 0.9093, 0.9112, 0.9098, 0.9131, 0.9098, 0.9134,
        0.9096, 0.9130, 0.9111, 0.9143, 0.9092, 0.9139, 0.9092, 0.9091, 0.9094,
        0.9112, 0.9101, 0.9101, 0.9135, 0.9121, 0.9095, 0.9095, 0.9093, 0.9108,
        0.9105, 0.9092, 0.9109, 0.9155, 0.9142, 0.9112, 0.9099, 0.9093],
       device='cuda:0', requires_grad=True)
Epoch: 004/100, Runtime 2.205971, Loss 1.766190, forward nfe 878, backward nfe 0, Train: 0.4571, Val: 0.4279, Test: 0.4000, Best time: 0.9752
K_d =  Parameter containing:
tensor([0.8877, 0.8869, 0.8879, 0.8867, 0.8871, 0.8953, 0.8879, 0.8910, 0.8871,
        0.8879, 0.8873, 0.8875, 0.8873, 0.8913, 0.8884, 0.8957, 0.8920, 0.8875,
        0.8876, 0.8986, 0.8867, 0.8874, 0.8982, 0.8950, 0.8876, 0.8972, 0.8967,
        0.8888, 0.8928, 0.8879, 0.8881, 0.8878, 0.8929, 0.8892, 0.8938, 0.8876,
        0.8890, 0.8873, 0.8938, 0.8953, 0.8879, 0.8879, 0.8873, 0.8877, 0.8875,
        0.8879, 0.8888, 0.8956, 0.8871, 0.8904, 0.8880, 0.8950, 0.8879, 0.8947,
        0.8877, 0.8947, 0.8903, 0.8958, 0.8870, 0.8957, 0.8871, 0.8869, 0.8882,
        0.8918, 0.8883, 0.8884, 0.8946, 0.8929, 0.8876, 0.8876, 0.8874, 0.8895,
        0.8891, 0.8870, 0.8899, 0.8970, 0.8942, 0.8916, 0.8881, 0.8889],
       device='cuda:0', requires_grad=True)
Epoch: 005/100, Runtime 2.085516, Loss 1.566214, forward nfe 1134, backward nfe 0, Train: 0.7429, Val: 0.6581, Test: 0.6335, Best time: 7.6710
K_d =  Parameter containing:
tensor([0.8660, 0.8650, 0.8663, 0.8643, 0.8653, 0.8771, 0.8662, 0.8707, 0.8653,
        0.8663, 0.8650, 0.8674, 0.8662, 0.8735, 0.8680, 0.8767, 0.8744, 0.8659,
        0.8660, 0.8816, 0.8650, 0.8657, 0.8806, 0.8769, 0.8658, 0.8769, 0.8772,
        0.8692, 0.8764, 0.8663, 0.8665, 0.8662, 0.8738, 0.8678, 0.8757, 0.8660,
        0.8691, 0.8656, 0.8754, 0.8762, 0.8663, 0.8663, 0.8651, 0.8672, 0.8658,
        0.8663, 0.8672, 0.8763, 0.8648, 0.8714, 0.8664, 0.8768, 0.8663, 0.8758,
        0.8660, 0.8760, 0.8701, 0.8780, 0.8650, 0.8780, 0.8656, 0.8652, 0.8668,
        0.8734, 0.8668, 0.8669, 0.8768, 0.8732, 0.8659, 0.8659, 0.8660, 0.8698,
        0.8686, 0.8652, 0.8712, 0.8783, 0.8740, 0.8721, 0.8665, 0.8691],
       device='cuda:0', requires_grad=True)
Epoch: 006/100, Runtime 2.110648, Loss 1.364837, forward nfe 1378, backward nfe 0, Train: 0.8571, Val: 0.7706, Test: 0.7706, Best time: 13.8059
K_d =  Parameter containing:
tensor([0.8446, 0.8434, 0.8450, 0.8419, 0.8435, 0.8583, 0.8449, 0.8513, 0.8438,
        0.8450, 0.8429, 0.8482, 0.8447, 0.8571, 0.8472, 0.8579, 0.8578, 0.8445,
        0.8446, 0.8657, 0.8433, 0.8442, 0.8633, 0.8585, 0.8444, 0.8571, 0.8572,
        0.8495, 0.8594, 0.8450, 0.8453, 0.8449, 0.8540, 0.8462, 0.8581, 0.8446,
        0.8501, 0.8441, 0.8587, 0.8572, 0.8449, 0.8450, 0.8431, 0.8468, 0.8445,
        0.8450, 0.8466, 0.8567, 0.8428, 0.8531, 0.8451, 0.8582, 0.8450, 0.8566,
        0.8446, 0.8573, 0.8494, 0.8600, 0.8434, 0.8614, 0.8438, 0.8434, 0.8456,
        0.8546, 0.8455, 0.8457, 0.8605, 0.8534, 0.8446, 0.8445, 0.8477, 0.8496,
        0.8504, 0.8436, 0.8541, 0.8591, 0.8559, 0.8537, 0.8452, 0.8508],
       device='cuda:0', requires_grad=True)
Epoch: 007/100, Runtime 2.033040, Loss 1.149661, forward nfe 1628, backward nfe 0, Train: 0.8786, Val: 0.8132, Test: 0.8152, Best time: 75.1786
K_d =  Parameter containing:
tensor([0.8235, 0.8221, 0.8240, 0.8194, 0.8217, 0.8388, 0.8239, 0.8317, 0.8226,
        0.8240, 0.8215, 0.8298, 0.8235, 0.8415, 0.8260, 0.8385, 0.8418, 0.8234,
        0.8235, 0.8488, 0.8215, 0.8230, 0.8450, 0.8395, 0.8233, 0.8371, 0.8370,
        0.8298, 0.8421, 0.8239, 0.8243, 0.8238, 0.8343, 0.8249, 0.8400, 0.8235,
        0.8308, 0.8229, 0.8410, 0.8381, 0.8239, 0.8240, 0.8214, 0.8263, 0.8234,
        0.8239, 0.8255, 0.8366, 0.8206, 0.8344, 0.8242, 0.8399, 0.8240, 0.8369,
        0.8235, 0.8387, 0.8292, 0.8423, 0.8221, 0.8442, 0.8225, 0.8216, 0.8242,
        0.8360, 0.8246, 0.8248, 0.8430, 0.8333, 0.8235, 0.8233, 0.8313, 0.8291,
        0.8325, 0.8224, 0.8365, 0.8396, 0.8387, 0.8350, 0.8242, 0.8319],
       device='cuda:0', requires_grad=True)
Epoch: 008/100, Runtime 2.067331, Loss 0.946645, forward nfe 1866, backward nfe 0, Train: 0.8786, Val: 0.8228, Test: 0.8264, Best time: 25.1083
K_d =  Parameter containing:
tensor([0.8027, 0.8011, 0.8033, 0.7984, 0.8001, 0.8206, 0.8031, 0.8126, 0.8017,
        0.8032, 0.8009, 0.8116, 0.8021, 0.8251, 0.8055, 0.8186, 0.8249, 0.8026,
        0.8028, 0.8317, 0.7997, 0.8021, 0.8260, 0.8198, 0.8024, 0.8200, 0.8164,
        0.8097, 0.8244, 0.8032, 0.8036, 0.8030, 0.8184, 0.8062, 0.8218, 0.8027,
        0.8116, 0.8021, 0.8231, 0.8189, 0.8032, 0.8033, 0.8001, 0.8056, 0.8026,
        0.8030, 0.8048, 0.8167, 0.7999, 0.8155, 0.8035, 0.8218, 0.8033, 0.8186,
        0.8028, 0.8196, 0.8088, 0.8245, 0.8010, 0.8264, 0.8009, 0.8000, 0.8035,
        0.8175, 0.8039, 0.8043, 0.8247, 0.8130, 0.8028, 0.8022, 0.8140, 0.8084,
        0.8147, 0.8014, 0.8186, 0.8197, 0.8217, 0.8155, 0.8035, 0.8131],
       device='cuda:0', requires_grad=True)
Epoch: 009/100, Runtime 2.003833, Loss 0.751907, forward nfe 2098, backward nfe 0, Train: 0.9071, Val: 0.8265, Test: 0.8264, Best time: 8.5044
K_d =  Parameter containing:
tensor([0.7822, 0.7803, 0.7828, 0.7772, 0.7787, 0.8021, 0.7827, 0.7930, 0.7811,
        0.7829, 0.7802, 0.7932, 0.7808, 0.8086, 0.7852, 0.7984, 0.8073, 0.7821,
        0.7823, 0.8148, 0.7780, 0.7815, 0.8068, 0.7998, 0.7819, 0.8028, 0.7956,
        0.7893, 0.8062, 0.7828, 0.7832, 0.7823, 0.8025, 0.7872, 0.8031, 0.7822,
        0.7921, 0.7815, 0.8049, 0.7991, 0.7828, 0.7829, 0.7791, 0.7852, 0.7821,
        0.7823, 0.7839, 0.7967, 0.7791, 0.7964, 0.7831, 0.8041, 0.7829, 0.8001,
        0.7823, 0.8001, 0.7885, 0.8065, 0.7803, 0.8089, 0.7795, 0.7786, 0.7827,
        0.7996, 0.7836, 0.7840, 0.8063, 0.7925, 0.7823, 0.7814, 0.7961, 0.7874,
        0.7968, 0.7808, 0.8006, 0.8001, 0.8040, 0.7956, 0.7831, 0.7938],
       device='cuda:0', requires_grad=True)
Epoch: 010/100, Runtime 1.962567, Loss 0.648232, forward nfe 2324, backward nfe 0, Train: 0.9071, Val: 0.8265, Test: 0.8264, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.7620, 0.7599, 0.7627, 0.7561, 0.7572, 0.7838, 0.7626, 0.7732, 0.7608,
        0.7628, 0.7601, 0.7746, 0.7600, 0.7918, 0.7644, 0.7784, 0.7902, 0.7619,
        0.7621, 0.7982, 0.7564, 0.7613, 0.7875, 0.7800, 0.7616, 0.7854, 0.7749,
        0.7687, 0.7882, 0.7626, 0.7631, 0.7617, 0.7866, 0.7678, 0.7843, 0.7621,
        0.7724, 0.7612, 0.7864, 0.7801, 0.7627, 0.7628, 0.7582, 0.7651, 0.7620,
        0.7616, 0.7630, 0.7765, 0.7585, 0.7772, 0.7631, 0.7864, 0.7628, 0.7814,
        0.7621, 0.7813, 0.7683, 0.7886, 0.7599, 0.7912, 0.7581, 0.7574, 0.7620,
        0.7820, 0.7636, 0.7640, 0.7884, 0.7721, 0.7621, 0.7607, 0.7775, 0.7668,
        0.7784, 0.7604, 0.7825, 0.7808, 0.7865, 0.7754, 0.7630, 0.7741],
       device='cuda:0', requires_grad=True)
Epoch: 011/100, Runtime 1.928454, Loss 0.500846, forward nfe 2550, backward nfe 0, Train: 0.9071, Val: 0.8265, Test: 0.8264, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.7422, 0.7398, 0.7429, 0.7354, 0.7357, 0.7656, 0.7427, 0.7533, 0.7409,
        0.7430, 0.7401, 0.7558, 0.7396, 0.7753, 0.7438, 0.7597, 0.7733, 0.7421,
        0.7423, 0.7824, 0.7348, 0.7413, 0.7685, 0.7614, 0.7417, 0.7688, 0.7540,
        0.7491, 0.7706, 0.7428, 0.7435, 0.7412, 0.7710, 0.7489, 0.7658, 0.7422,
        0.7524, 0.7413, 0.7688, 0.7620, 0.7429, 0.7430, 0.7376, 0.7456, 0.7422,
        0.7409, 0.7435, 0.7564, 0.7380, 0.7589, 0.7433, 0.7690, 0.7431, 0.7633,
        0.7422, 0.7642, 0.7483, 0.7718, 0.7398, 0.7742, 0.7367, 0.7369, 0.7422,
        0.7651, 0.7438, 0.7443, 0.7714, 0.7525, 0.7423, 0.7400, 0.7595, 0.7462,
        0.7606, 0.7404, 0.7654, 0.7618, 0.7697, 0.7553, 0.7433, 0.7547],
       device='cuda:0', requires_grad=True)
Epoch: 012/100, Runtime 1.934716, Loss 0.468529, forward nfe 2776, backward nfe 0, Train: 0.9071, Val: 0.8265, Test: 0.8264, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.7227, 0.7200, 0.7234, 0.7152, 0.7143, 0.7477, 0.7232, 0.7331, 0.7212,
        0.7236, 0.7199, 0.7369, 0.7199, 0.7598, 0.7235, 0.7415, 0.7571, 0.7226,
        0.7228, 0.7663, 0.7141, 0.7217, 0.7502, 0.7441, 0.7222, 0.7528, 0.7337,
        0.7302, 0.7530, 0.7233, 0.7242, 0.7209, 0.7563, 0.7312, 0.7471, 0.7226,
        0.7330, 0.7216, 0.7516, 0.7447, 0.7234, 0.7235, 0.7174, 0.7274, 0.7227,
        0.7204, 0.7242, 0.7363, 0.7183, 0.7404, 0.7238, 0.7520, 0.7236, 0.7462,
        0.7227, 0.7484, 0.7289, 0.7570, 0.7201, 0.7569, 0.7154, 0.7170, 0.7238,
        0.7491, 0.7245, 0.7250, 0.7549, 0.7346, 0.7226, 0.7194, 0.7412, 0.7259,
        0.7438, 0.7207, 0.7480, 0.7431, 0.7540, 0.7357, 0.7238, 0.7355],
       device='cuda:0', requires_grad=True)
Epoch: 013/100, Runtime 1.808335, Loss 0.404266, forward nfe 3002, backward nfe 0, Train: 0.9357, Val: 0.8324, Test: 0.8376, Best time: 23.5939
K_d =  Parameter containing:
tensor([0.7034, 0.7006, 0.7043, 0.6954, 0.6935, 0.7300, 0.7039, 0.7140, 0.7019,
        0.7044, 0.6998, 0.7176, 0.7002, 0.7447, 0.7034, 0.7231, 0.7409, 0.7034,
        0.7036, 0.7499, 0.6931, 0.7024, 0.7318, 0.7279, 0.7030, 0.7369, 0.7133,
        0.7124, 0.7369, 0.7042, 0.7052, 0.7006, 0.7418, 0.7133, 0.7283, 0.7032,
        0.7131, 0.7022, 0.7346, 0.7277, 0.7043, 0.7044, 0.6978, 0.7095, 0.7035,
        0.6998, 0.7055, 0.7168, 0.6988, 0.7231, 0.7047, 0.7355, 0.7045, 0.7301,
        0.7035, 0.7328, 0.7098, 0.7426, 0.7007, 0.7392, 0.6941, 0.6984, 0.7064,
        0.7330, 0.7054, 0.7060, 0.7388, 0.7172, 0.7033, 0.6986, 0.7226, 0.7062,
        0.7267, 0.7014, 0.7303, 0.7257, 0.7388, 0.7162, 0.7047, 0.7165],
       device='cuda:0', requires_grad=True)
Epoch: 014/100, Runtime 1.788008, Loss 0.355937, forward nfe 3222, backward nfe 0, Train: 0.9357, Val: 0.8360, Test: 0.8335, Best time: 13.9963
K_d =  Parameter containing:
tensor([0.6846, 0.6814, 0.6855, 0.6755, 0.6725, 0.7123, 0.6849, 0.6955, 0.6830,
        0.6857, 0.6794, 0.6986, 0.6804, 0.7301, 0.6843, 0.7055, 0.7245, 0.6845,
        0.6848, 0.7340, 0.6724, 0.6835, 0.7135, 0.7119, 0.6841, 0.7208, 0.6940,
        0.6946, 0.7213, 0.6854, 0.6866, 0.6804, 0.7280, 0.6955, 0.7093, 0.6842,
        0.6939, 0.6831, 0.7173, 0.7108, 0.6855, 0.6855, 0.6780, 0.6922, 0.6846,
        0.6792, 0.6875, 0.6979, 0.6792, 0.7053, 0.6859, 0.7185, 0.6857, 0.7142,
        0.6846, 0.7170, 0.6909, 0.7280, 0.6816, 0.7226, 0.6729, 0.6793, 0.6896,
        0.7168, 0.6867, 0.6873, 0.7223, 0.6993, 0.6843, 0.6780, 0.7040, 0.6864,
        0.7099, 0.6824, 0.7132, 0.7087, 0.7231, 0.6967, 0.6859, 0.6979],
       device='cuda:0', requires_grad=True)
Epoch: 015/100, Runtime 1.690994, Loss 0.339794, forward nfe 3424, backward nfe 0, Train: 0.9357, Val: 0.8360, Test: 0.8335, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.6660, 0.6625, 0.6670, 0.6557, 0.6515, 0.6952, 0.6661, 0.6767, 0.6644,
        0.6672, 0.6594, 0.6802, 0.6610, 0.7158, 0.6656, 0.6891, 0.7099, 0.6660,
        0.6663, 0.7193, 0.6526, 0.6649, 0.6959, 0.6964, 0.6656, 0.7050, 0.6747,
        0.6781, 0.7064, 0.6669, 0.6682, 0.6604, 0.7159, 0.6780, 0.6908, 0.6656,
        0.6758, 0.6644, 0.7014, 0.6942, 0.6670, 0.6671, 0.6585, 0.6764, 0.6661,
        0.6589, 0.6701, 0.6812, 0.6601, 0.6881, 0.6674, 0.7013, 0.6672, 0.6992,
        0.6661, 0.7019, 0.6731, 0.7142, 0.6629, 0.7069, 0.6518, 0.6601, 0.6730,
        0.7002, 0.6683, 0.6689, 0.7070, 0.6829, 0.6656, 0.6577, 0.6854, 0.6668,
        0.6929, 0.6637, 0.6967, 0.6927, 0.7088, 0.6778, 0.6675, 0.6800],
       device='cuda:0', requires_grad=True)
Epoch: 016/100, Runtime 1.748334, Loss 0.294538, forward nfe 3620, backward nfe 0, Train: 0.9357, Val: 0.8360, Test: 0.8335, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.6478, 0.6440, 0.6488, 0.6371, 0.6307, 0.6788, 0.6476, 0.6586, 0.6461,
        0.6491, 0.6397, 0.6615, 0.6425, 0.7015, 0.6467, 0.6736, 0.6980, 0.6478,
        0.6481, 0.7046, 0.6339, 0.6466, 0.6800, 0.6815, 0.6474, 0.6911, 0.6560,
        0.6641, 0.6913, 0.6487, 0.6502, 0.6406, 0.7045, 0.6612, 0.6734, 0.6472,
        0.6593, 0.6459, 0.6868, 0.6799, 0.6489, 0.6489, 0.6397, 0.6621, 0.6479,
        0.6386, 0.6531, 0.6650, 0.6413, 0.6708, 0.6493, 0.6849, 0.6491, 0.6856,
        0.6479, 0.6890, 0.6561, 0.7031, 0.6445, 0.6909, 0.6326, 0.6413, 0.6573,
        0.6852, 0.6502, 0.6509, 0.6939, 0.6706, 0.6471, 0.6377, 0.6694, 0.6473,
        0.6774, 0.6454, 0.6800, 0.6771, 0.6975, 0.6590, 0.6494, 0.6620],
       device='cuda:0', requires_grad=True)
Epoch: 017/100, Runtime 1.662633, Loss 0.282994, forward nfe 3816, backward nfe 0, Train: 0.9357, Val: 0.8360, Test: 0.8335, Best time: 32.0000
K_d =  Parameter containing:
tensor([0.6300, 0.6259, 0.6310, 0.6188, 0.6104, 0.6634, 0.6292, 0.6418, 0.6282,
        0.6313, 0.6205, 0.6430, 0.6242, 0.6877, 0.6280, 0.6590, 0.6859, 0.6299,
        0.6303, 0.6904, 0.6157, 0.6287, 0.6654, 0.6673, 0.6296, 0.6776, 0.6382,
        0.6511, 0.6764, 0.6309, 0.6326, 0.6213, 0.6938, 0.6447, 0.6567, 0.6292,
        0.6432, 0.6277, 0.6724, 0.6662, 0.6311, 0.6311, 0.6214, 0.6481, 0.6301,
        0.6185, 0.6362, 0.6505, 0.6228, 0.6536, 0.6315, 0.6680, 0.6313, 0.6728,
        0.6300, 0.6764, 0.6397, 0.6927, 0.6265, 0.6749, 0.6131, 0.6233, 0.6422,
        0.6702, 0.6325, 0.6332, 0.6813, 0.6578, 0.6290, 0.6175, 0.6535, 0.6276,
        0.6615, 0.6274, 0.6635, 0.6627, 0.6861, 0.6406, 0.6316, 0.6445],
       device='cuda:0', requires_grad=True)
